/*
  This class has been generated by the Code Generator
*/

package com.laiyifen.shop;

import java.util.Vector;

import com.cordys.cpc.bsf.busobject.BusObjectConfig;
import com.cordys.cpc.bsf.busobject.BusObjectIterator;
import com.cordys.cpc.bsf.event.AfterCommitObjectEvent;
import com.cordys.cpc.bsf.util.ObjectHelper;
import com.laiyifen.common.core.APPROVAL_HISTORY;
import com.laiyifen.common.core.ATTACHMENT;
import com.laiyifen.common.util.BusObjectHelper;
import com.laiyifen.shop.util.ShopUtil;


public class CompositeSupermarketInfo extends CompositeSupermarketInfoBase
{ 

	private SUPERMARKET_TRANS_INFO supermarketTransInfo = null;
	private APPROVAL_HISTORY approvalHistoryObject = null;
	private Vector<APPROVAL_HISTORY> approvalHistorys = new Vector<APPROVAL_HISTORY>();
	private ATTACHMENT attachment = null;
	private Vector<ATTACHMENT> attachments = new Vector<ATTACHMENT>();

	public CompositeSupermarketInfo() {
		this((BusObjectConfig) null);
	}

	public CompositeSupermarketInfo(BusObjectConfig config) {
		super(config);
	}

	public static com.laiyifen.shop.CompositeSupermarketInfo getCompositeSupermarketInfoObject(String Form_ID) {
		CompositeSupermarketInfo compositeSupermarketObject = new CompositeSupermarketInfo();

		SUPERMARKET_TRANS_INFO supermarketTransInfo = SUPERMARKET_TRANS_INFO
				.getSupermarketTransInfoObject(Form_ID);
		compositeSupermarketObject.setSUPERMARKET_TRANS_INFOObject(supermarketTransInfo);

		BusObjectIterator<ATTACHMENT> attachmentObj = ATTACHMENT
				.getAttachment(Form_ID);
		if (attachmentObj != null) {
			while (attachmentObj.hasMoreElements()) {
				ATTACHMENT attachmentInfo = (ATTACHMENT) attachmentObj
						.nextElement();
				compositeSupermarketObject.addATTACHMENTObject(attachmentInfo);
			}
		}
		BusObjectIterator<APPROVAL_HISTORY> approvalHistoryObj = APPROVAL_HISTORY
				.getApprovalHistory(Form_ID);
		if (approvalHistoryObj != null) {
			while (approvalHistoryObj.hasMoreElements()) {
				APPROVAL_HISTORY approvalHistoryInfo = (APPROVAL_HISTORY) approvalHistoryObj
						.nextElement();
				compositeSupermarketObject
						.addAPPROVAL_HISTORYObject(approvalHistoryInfo);
			}
		}
		compositeSupermarketObject.makeTransient();
		return compositeSupermarketObject;
	}

	public void onInsert() {
		// Removing the unnecessary objects from the parent object.
		BusObjectHelper.removeEmptyChildren(this);
		SUPERMARKET_TRANS_INFO supermarket = this.getSUPERMARKET_TRANS_INFOObject();
		if (supermarket != null) {
			ShopUtil _formIDGenerator = new ShopUtil();
			String formID = _formIDGenerator.setFormID(null);
/**
			ShopUtil _shopIDGenerator = new ShopUtil();
			Integer shopID = _shopIDGenerator.setShopID(0);
*/
			supermarket.setFORM_ID(formID);
			supermarketTransInfo = (SUPERMARKET_TRANS_INFO) ObjectHelper
					.createObjectForInsert(supermarket,
							com.laiyifen.shop.SUPERMARKET_TRANS_INFO.class, false);
			supermarketTransInfo.insert();
		}
		BusObjectIterator<APPROVAL_HISTORY> approvalHistoryObj = this
				.getAPPROVAL_HISTORYObjects();
		if (approvalHistoryObj != null) {
			while (approvalHistoryObj.hasMoreElements()) {
				APPROVAL_HISTORY approvalHistoryInfo = (APPROVAL_HISTORY) approvalHistoryObj
						.nextElement();
				approvalHistoryObject = (APPROVAL_HISTORY) ObjectHelper
						.createObjectForInsert(
								approvalHistoryInfo,
								com.laiyifen.common.core.APPROVAL_HISTORY.class,
								false);
				approvalHistoryObject.insert();
				approvalHistorys.add(approvalHistoryObject);
			}
		}

		BusObjectHelper.unlinkChildren(this, APPROVAL_HISTORY.class);

		BusObjectIterator<ATTACHMENT> attachmentObj = this
				.getATTACHMENTObjects();
		if (attachmentObj != null) {
			while (attachmentObj.hasMoreElements()) {
				ATTACHMENT attachmentInfo = (ATTACHMENT) attachmentObj
						.nextElement();
				attachment = (ATTACHMENT) ObjectHelper.createObjectForInsert(
						attachmentInfo,
						com.laiyifen.common.core.ATTACHMENT.class, false);
				attachment.insert();
				attachments.add(attachment);
			}
		}
		BusObjectHelper.unlinkChildren(this, ATTACHMENT.class);
	}

	public void onUpdate() {
		BusObjectHelper.removeEmptyChildren(this);
		SUPERMARKET_TRANS_INFO supermarket = this.getSUPERMARKET_TRANS_INFOObject();
		if (supermarket != null) {
			supermarketTransInfo = (SUPERMARKET_TRANS_INFO) ObjectHelper
					.createObjectForUpdate(supermarket,
							com.laiyifen.shop.SUPERMARKET_TRANS_INFO.class, false);
			supermarketTransInfo.update();
		}

		BusObjectIterator<APPROVAL_HISTORY> approvalHistoryObj = this
				.getAPPROVAL_HISTORYObjects();
		if (approvalHistoryObj != null) {
			while (approvalHistoryObj.hasMoreElements()) {
				APPROVAL_HISTORY approvalHistoryInfo = (APPROVAL_HISTORY) approvalHistoryObj
						.nextElement();
				approvalHistoryObject = (APPROVAL_HISTORY) ObjectHelper
						.createObjectForUpdate(
								approvalHistoryInfo,
								com.laiyifen.common.core.APPROVAL_HISTORY.class,
								false);
				approvalHistoryObject.update();
				approvalHistorys.add(approvalHistoryObject);
			}
		}
		
		BusObjectHelper.unlinkChildren(this, APPROVAL_HISTORY.class);

		BusObjectIterator<ATTACHMENT> attachmentObj = this
				.getATTACHMENTObjects();
		if (attachmentObj != null) {
			while (attachmentObj.hasMoreElements()) {
				ATTACHMENT attachmentInfo = (ATTACHMENT) attachmentObj
						.nextElement();
				attachment = (ATTACHMENT) ObjectHelper.createObjectForUpdate(
						attachmentInfo,
						com.laiyifen.common.core.ATTACHMENT.class, false);
				attachment.update();
				attachments.add(attachment);
			}
		}
		
		BusObjectHelper.unlinkChildren(this, ATTACHMENT.class);
	}

	public void onDelete() {
		BusObjectHelper.removeEmptyChildren(this);
		SUPERMARKET_TRANS_INFO supermarket = this.getSUPERMARKET_TRANS_INFOObject();
		if (supermarket != null) {
			ObjectHelper.createObjectForDelete(supermarket,
					com.laiyifen.shop.SUPERMARKET_TRANS_INFO.class, true);
		}
		 	 
		BusObjectIterator<APPROVAL_HISTORY> approvalHistoryObj = this
				.getAPPROVAL_HISTORYObjects();
		if (approvalHistoryObj != null) {
			while (approvalHistoryObj.hasMoreElements()) {
				APPROVAL_HISTORY approvalHistoryInfo = (APPROVAL_HISTORY) approvalHistoryObj
						.nextElement();
				ObjectHelper.createObjectForDelete(approvalHistoryInfo,
						com.laiyifen.common.core.APPROVAL_HISTORY.class, true);
			}
		}

		BusObjectIterator<ATTACHMENT> attachmentObj = this
				.getATTACHMENTObjects();
		if (attachmentObj != null) {
			while (attachmentObj.hasMoreElements()) {
				ATTACHMENT attachmentInfo = (ATTACHMENT) attachmentObj
						.nextElement();
				ObjectHelper.createObjectForDelete(attachmentInfo,
						com.laiyifen.common.core.ATTACHMENT.class, true);
			}
		}
	}
	@Override
	public void onAfterCommit(AfterCommitObjectEvent event) {
		// TODO Auto-generated method stub
    	super.onAfterCommit(event);
		this.createResponseObject();
		this.clear();
	}

	/**
	 * Create the composite response object.
	 */
	private void createResponseObject() {
		// Persistable objects we can modify, so first make transient.
		this.makeTransient();

		if (supermarketTransInfo != null) {
			this.setSUPERMARKET_TRANS_INFOObject(supermarketTransInfo);
		}

		for (APPROVAL_HISTORY approvalHistory : approvalHistorys) {
			this.addAPPROVAL_HISTORYObject(approvalHistory);
		}

		for (ATTACHMENT attachment : attachments) {
			this.addATTACHMENTObject(attachment);
		}
	}
	/**
	 * Clears the local variables.
	 */
	private void clear() {
		supermarketTransInfo = null;
		attachment = null;
		approvalHistoryObject = null;
		approvalHistorys.clear();
		attachments.clear();
	}
}
