/*
  This class has been generated by the Code Generator
*/

package com.laiyifen.shop;

import com.cordys.cpc.bsf.busobject.BusObjectConfig;
import com.cordys.cpc.bsf.busobject.BusObjectIterator;
import com.cordys.cpc.bsf.busobject.QueryObject;
import com.cordys.cpc.bsf.classinfo.AttributeInfo;
import com.cordys.cpc.bsf.classinfo.ClassInfo;
import com.cordys.cpc.bsf.classinfo.RelationInfo_FK;
import com.cordys.cpc.bsf.listeners.constraint.NumberValidator;
import com.cordys.cpc.bsf.listeners.constraint.StringValidator;


public abstract class SHOP_TARGET_ASSESMENTBase extends com.cordys.cpc.bsf.busobject.StateBusObject
{
    // tags used in the XML document
    public final static String ATTR_ID = "ID";
    public final static String ATTR_FORM_ID = "FORM_ID";
    public final static String ATTR_HAS_OLDSHOP = "HAS_OLDSHOP";
    public final static String ATTR_OLD_ADDRESS = "OLD_ADDRESS";
    public final static String ATTR_OLD_OPERATING = "OLD_OPERATING";
    public final static String ATTR_OLD_AREA = "OLD_AREA";
    public final static String ATTR_DISTANCE = "DISTANCE";
    public final static String ATTR_OLD_RENTAL = "OLD_RENTAL";
    public final static String ATTR_HAS_OPPONENT = "HAS_OPPONENT";
    public final static String ATTR_OPPONENT_NAME = "OPPONENT_NAME";
    public final static String ATTR_OPPONENT_AREA = "OPPONENT_AREA";
    public final static String ATTR_TURNOVER = "TURNOVER";
    public final static String ATTR_PRODUCT_VARIETY = "PRODUCT_VARIETY";
    public final static String ATTR_CONTRAST = "CONTRAST";
    public final static String ATTR_ASSESS = "ASSESS";
    public final static String ATTR_PROMPT = "PROMPT";
    public final static String ATTR_EXT1 = "EXT1";
    public final static String ATTR_EXT2 = "EXT2";
    private final static String REL_FORM_IDObject = "FK:SHOP_TARGET_ASSESMENT[FORM_ID]:SHOP_TARGET_INFO[FORM_ID]";
    private static ClassInfo s_classInfo = null;
    public static ClassInfo _getClassInfo()//NOPMD framework ensures this is thread safe
    {
        if ( s_classInfo == null )//NOPMD
        {
            s_classInfo = newClassInfo(SHOP_TARGET_ASSESMENT.class);
            s_classInfo.setTableName("SHOP_TARGET_ASSESMENT");
            s_classInfo.setUIDElements(new String[]{ATTR_ID});
            {
                AttributeInfo ai = new AttributeInfo(ATTR_ID);
                ai.setJavaName(ATTR_ID);
                ai.setColumnName(ATTR_ID);
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_ID);
                v.setMaxLength(50);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_FORM_ID);
                ai.setJavaName(ATTR_FORM_ID);
                ai.setColumnName(ATTR_FORM_ID);
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_FORM_ID);
                v.setMaxLength(50);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_HAS_OLDSHOP);
                ai.setJavaName(ATTR_HAS_OLDSHOP);
                ai.setColumnName(ATTR_HAS_OLDSHOP);
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_HAS_OLDSHOP);
                v.setMaxLength(1);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_OLD_ADDRESS);
                ai.setJavaName(ATTR_OLD_ADDRESS);
                ai.setColumnName(ATTR_OLD_ADDRESS);
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_OLD_ADDRESS);
                v.setMaxLength(100);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_OLD_OPERATING);
                ai.setJavaName(ATTR_OLD_OPERATING);
                ai.setColumnName(ATTR_OLD_OPERATING);
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_OLD_OPERATING);
                v.setMaxLength(100);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_OLD_AREA);
                ai.setJavaName(ATTR_OLD_AREA);
                ai.setColumnName(ATTR_OLD_AREA);
                ai.setAttributeClass(double.class);
                NumberValidator v = new NumberValidator(ATTR_OLD_AREA);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_DISTANCE);
                ai.setJavaName(ATTR_DISTANCE);
                ai.setColumnName(ATTR_DISTANCE);
                ai.setAttributeClass(double.class);
                NumberValidator v = new NumberValidator(ATTR_DISTANCE);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_OLD_RENTAL);
                ai.setJavaName(ATTR_OLD_RENTAL);
                ai.setColumnName(ATTR_OLD_RENTAL);
                ai.setAttributeClass(double.class);
                NumberValidator v = new NumberValidator(ATTR_OLD_RENTAL);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_HAS_OPPONENT);
                ai.setJavaName(ATTR_HAS_OPPONENT);
                ai.setColumnName(ATTR_HAS_OPPONENT);
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_HAS_OPPONENT);
                v.setMaxLength(1);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_OPPONENT_NAME);
                ai.setJavaName(ATTR_OPPONENT_NAME);
                ai.setColumnName(ATTR_OPPONENT_NAME);
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_OPPONENT_NAME);
                v.setMaxLength(100);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_OPPONENT_AREA);
                ai.setJavaName(ATTR_OPPONENT_AREA);
                ai.setColumnName(ATTR_OPPONENT_AREA);
                ai.setAttributeClass(double.class);
                NumberValidator v = new NumberValidator(ATTR_OPPONENT_AREA);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_TURNOVER);
                ai.setJavaName(ATTR_TURNOVER);
                ai.setColumnName(ATTR_TURNOVER);
                ai.setAttributeClass(double.class);
                NumberValidator v = new NumberValidator(ATTR_TURNOVER);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_PRODUCT_VARIETY);
                ai.setJavaName(ATTR_PRODUCT_VARIETY);
                ai.setColumnName(ATTR_PRODUCT_VARIETY);
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_PRODUCT_VARIETY);
                v.setMaxLength(200);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_CONTRAST);
                ai.setJavaName(ATTR_CONTRAST);
                ai.setColumnName(ATTR_CONTRAST);
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_CONTRAST);
                v.setMaxLength(200);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_ASSESS);
                ai.setJavaName(ATTR_ASSESS);
                ai.setColumnName(ATTR_ASSESS);
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_ASSESS);
                v.setMaxLength(200);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_PROMPT);
                ai.setJavaName(ATTR_PROMPT);
                ai.setColumnName(ATTR_PROMPT);
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_PROMPT);
                v.setMaxLength(200);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_EXT1);
                ai.setJavaName(ATTR_EXT1);
                ai.setColumnName(ATTR_EXT1);
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_EXT1);
                v.setMaxLength(50);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                AttributeInfo ai = new AttributeInfo(ATTR_EXT2);
                ai.setJavaName(ATTR_EXT2);
                ai.setColumnName(ATTR_EXT2);
                ai.setAttributeClass(String.class);
                StringValidator v = new StringValidator(ATTR_EXT2);
                v.setMaxLength(50);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }
            {
                // relation FORM_IDObject (FK:SHOP_TARGET_ASSESMENT[FORM_ID]:SHOP_TARGET_INFO[FORM_ID])
                RelationInfo_FK ri = new RelationInfo_FK(REL_FORM_IDObject);
                ri.setName("FORM_IDObject");
                ri.setLocalAttributes(new String[]{ATTR_FORM_ID});
                ri.setLocalIsPK(false);
                ri.setRelatedClass(com.laiyifen.shop.SHOP_TARGET_INFO.class);
                ri.setRelatedAttributes(new String[]{"FORM_ID"});//NOPMD
                ri.setRelatedIdentifier("FK:SHOP_TARGET_INFO[FORM_ID]:SHOP_TARGET_ASSESMENT[FORM_ID]");
                ri.setLoadMethod("loadFORM_IDObject");
                s_classInfo.addRelationInfo(ri);
            }
        }
        return s_classInfo;
    }

    public SHOP_TARGET_ASSESMENTBase(BusObjectConfig config)
    {
        super(config);
    }

    public String getID()
    {
        return getStringProperty(ATTR_ID);
    }

    public void setID(String value)
    {
        setProperty(ATTR_ID, value, 0);
    }

    public String getFORM_ID()
    {
        return getStringProperty(ATTR_FORM_ID);
    }

    public void setFORM_ID(String value)
    {
        String[] relations = new String[]{REL_FORM_IDObject};
        this.updateSingleRelations(relations, false);
        setProperty(ATTR_FORM_ID, value, 0);
        this.updateSingleRelations(relations, true);
    }

    public String getHAS_OLDSHOP()
    {
        return getStringProperty(ATTR_HAS_OLDSHOP);
    }

    public void setHAS_OLDSHOP(String value)
    {
        setProperty(ATTR_HAS_OLDSHOP, value, 0);
    }

    public String getOLD_ADDRESS()
    {
        return getStringProperty(ATTR_OLD_ADDRESS);
    }

    public void setOLD_ADDRESS(String value)
    {
        setProperty(ATTR_OLD_ADDRESS, value, 0);
    }

    public String getOLD_OPERATING()
    {
        return getStringProperty(ATTR_OLD_OPERATING);
    }

    public void setOLD_OPERATING(String value)
    {
        setProperty(ATTR_OLD_OPERATING, value, 0);
    }

    public double getOLD_AREA()
    {
        return getDoubleProperty(ATTR_OLD_AREA);
    }

    public void setOLD_AREA(double value)
    {
        setProperty(ATTR_OLD_AREA, value, 0);
    }

    public double getDISTANCE()
    {
        return getDoubleProperty(ATTR_DISTANCE);
    }

    public void setDISTANCE(double value)
    {
        setProperty(ATTR_DISTANCE, value, 0);
    }

    public double getOLD_RENTAL()
    {
        return getDoubleProperty(ATTR_OLD_RENTAL);
    }

    public void setOLD_RENTAL(double value)
    {
        setProperty(ATTR_OLD_RENTAL, value, 0);
    }

    public String getHAS_OPPONENT()
    {
        return getStringProperty(ATTR_HAS_OPPONENT);
    }

    public void setHAS_OPPONENT(String value)
    {
        setProperty(ATTR_HAS_OPPONENT, value, 0);
    }

    public String getOPPONENT_NAME()
    {
        return getStringProperty(ATTR_OPPONENT_NAME);
    }

    public void setOPPONENT_NAME(String value)
    {
        setProperty(ATTR_OPPONENT_NAME, value, 0);
    }

    public double getOPPONENT_AREA()
    {
        return getDoubleProperty(ATTR_OPPONENT_AREA);
    }

    public void setOPPONENT_AREA(double value)
    {
        setProperty(ATTR_OPPONENT_AREA, value, 0);
    }

    public double getTURNOVER()
    {
        return getDoubleProperty(ATTR_TURNOVER);
    }

    public void setTURNOVER(double value)
    {
        setProperty(ATTR_TURNOVER, value, 0);
    }

    public String getPRODUCT_VARIETY()
    {
        return getStringProperty(ATTR_PRODUCT_VARIETY);
    }

    public void setPRODUCT_VARIETY(String value)
    {
        setProperty(ATTR_PRODUCT_VARIETY, value, 0);
    }

    public String getCONTRAST()
    {
        return getStringProperty(ATTR_CONTRAST);
    }

    public void setCONTRAST(String value)
    {
        setProperty(ATTR_CONTRAST, value, 0);
    }

    public String getASSESS()
    {
        return getStringProperty(ATTR_ASSESS);
    }

    public void setASSESS(String value)
    {
        setProperty(ATTR_ASSESS, value, 0);
    }

    public String getPROMPT()
    {
        return getStringProperty(ATTR_PROMPT);
    }

    public void setPROMPT(String value)
    {
        setProperty(ATTR_PROMPT, value, 0);
    }

    public String getEXT1()
    {
        return getStringProperty(ATTR_EXT1);
    }

    public void setEXT1(String value)
    {
        setProperty(ATTR_EXT1, value, 0);
    }

    public String getEXT2()
    {
        return getStringProperty(ATTR_EXT2);
    }

    public void setEXT2(String value)
    {
        setProperty(ATTR_EXT2, value, 0);
    }

    public SHOP_TARGET_INFO getFORM_IDObject()
    {
        return (SHOP_TARGET_INFO)getSingleRelationObject(REL_FORM_IDObject);
    }
    public SHOP_TARGET_INFO loadFORM_IDObject()
    {
        String queryText = "select * from \"SHOP_TARGET_INFO\" where \"FORM_ID\" = :FORM_ID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("FORM_ID", "SHOP_TARGET_INFO.FORM_ID", QueryObject.PARAM_STRING, getFORM_ID());//NOPMD
        query.setResultClass(SHOP_TARGET_INFO.class);
        return (SHOP_TARGET_INFO)query.getObject();
    }


    public void setFORM_IDObject(SHOP_TARGET_INFO a_SHOP_TARGET_INFO)
    {
        if (a_SHOP_TARGET_INFO == null)
        {
            this.setNull("FORM_ID");
        }
        else
        {
            this.setFORM_ID(a_SHOP_TARGET_INFO.getFORM_ID());
        }
    }

    public void setNull(String element)
    {
        super.setNull(element);
        if (ATTR_FORM_ID.equals(element))
        {
            this.updateSingleRelation(REL_FORM_IDObject, false);
        }
    }
    public static BusObjectIterator<com.laiyifen.shop.SHOP_TARGET_ASSESMENT> getNextShopTargetAssesmentObjects(String ID, com.cordys.cpc.bsf.query.Cursor cursor)
    {
        String queryText = "select * from \"SHOP_TARGET_ASSESMENT\" where (\"ID\" > :ID) order by \"ID\" asc";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("ID", "SHOP_TARGET_ASSESMENT.ID", QueryObject.PARAM_STRING, ID);//NOPMD
        query.setResultClass(SHOP_TARGET_ASSESMENT.class);
        query.setCursor(cursor);
        return query.getObjects();
    }

    public static BusObjectIterator<com.laiyifen.shop.SHOP_TARGET_ASSESMENT> getPreviousShopTargetAssesmentObjects(String ID, com.cordys.cpc.bsf.query.Cursor cursor)
    {
        String queryText = "select * from \"SHOP_TARGET_ASSESMENT\" where (\"ID\" < :ID) order by \"ID\" desc";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("ID", "SHOP_TARGET_ASSESMENT.ID", QueryObject.PARAM_STRING, ID);//NOPMD
        query.setResultClass(SHOP_TARGET_ASSESMENT.class);
        query.setCursor(cursor);
        return query.getObjects();
    }

    public static com.laiyifen.shop.SHOP_TARGET_ASSESMENT getShopTargetAssesmentObject(String ID)
    {
        String queryText = "select * from \"SHOP_TARGET_ASSESMENT\" where \"ID\" = :ID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("ID", "SHOP_TARGET_ASSESMENT.ID", QueryObject.PARAM_STRING, ID);//NOPMD
        query.setResultClass(SHOP_TARGET_ASSESMENT.class);
        return (SHOP_TARGET_ASSESMENT)query.getObject();
    }


    public static BusObjectIterator<com.laiyifen.shop.SHOP_TARGET_ASSESMENT> getShopTargetAssesmentObjects(String fromID, String toID, com.cordys.cpc.bsf.query.Cursor cursor)
    {
        String queryText = "select * from \"SHOP_TARGET_ASSESMENT\" where \"ID\" between :fromID and :toID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("fromID", "SHOP_TARGET_ASSESMENT.ID", QueryObject.PARAM_STRING, fromID);
        query.addParameter("toID", "SHOP_TARGET_ASSESMENT.ID", QueryObject.PARAM_STRING, toID);
        query.setResultClass(SHOP_TARGET_ASSESMENT.class);
        query.setCursor(cursor);
        return query.getObjects();
    }

    public static BusObjectIterator<com.laiyifen.shop.SHOP_TARGET_ASSESMENT> getShopTargetAssesmentObjects(String fromID, String toID)
    {
        String queryText = "select * from \"SHOP_TARGET_ASSESMENT\" where \"ID\" between :fromID and :toID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("fromID", "SHOP_TARGET_ASSESMENT.ID", QueryObject.PARAM_STRING, fromID);
        query.addParameter("toID", "SHOP_TARGET_ASSESMENT.ID", QueryObject.PARAM_STRING, toID);
        query.setResultClass(SHOP_TARGET_ASSESMENT.class);
        return query.getObjects();
    }

    public static BusObjectIterator<com.laiyifen.shop.SHOP_TARGET_ASSESMENT> getShopTargetAssesmentObjectsForFormId(String FORM_ID)
    {
        String queryText = "select * from \"SHOP_TARGET_ASSESMENT\" where \"FORM_ID\" = :FORM_ID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("FORM_ID", "SHOP_TARGET_ASSESMENT.FORM_ID", QueryObject.PARAM_STRING, FORM_ID);//NOPMD
        query.setResultClass(SHOP_TARGET_ASSESMENT.class);
        return query.getObjects();
    }

}
