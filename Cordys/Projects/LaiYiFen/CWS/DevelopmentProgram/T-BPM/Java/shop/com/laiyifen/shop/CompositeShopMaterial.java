/*
  This class has been generated by the Code Generator
*/

package com.laiyifen.shop;

import java.util.Vector;

import com.cordys.cpc.bsf.busobject.BusObjectConfig;
import com.cordys.cpc.bsf.busobject.BusObjectIterator;
import com.cordys.cpc.bsf.event.AfterCommitObjectEvent;
import com.cordys.cpc.bsf.util.ObjectHelper;
import com.laiyifen.common.core.APPROVAL_HISTORY;
import com.laiyifen.common.core.ATTACHMENT;
import com.laiyifen.common.core.User;
import com.laiyifen.common.util.BusObjectHelper;
import com.laiyifen.shop.util.ShopUtil;


public class CompositeShopMaterial extends CompositeShopMaterialBase
{
	private SHOP_MATERIAL shopMaterialInfoObject = null;
	private SHOP_MASTER shopMasterObject = null;
	private Vector<SHOP_MATERIAL_DETAIL> shopMaterialDetailObjects = new Vector<SHOP_MATERIAL_DETAIL>();
	private Vector<APPROVAL_HISTORY> approvalHistoryObjects = new Vector<APPROVAL_HISTORY>();
	private Vector<ATTACHMENT> attachmentObjects = new Vector<ATTACHMENT>();
	
	public CompositeShopMaterial()
    {
        this((BusObjectConfig)null);
    }

    public CompositeShopMaterial(BusObjectConfig config)
    {
        super(config);
    }

    public static com.laiyifen.shop.CompositeShopMaterial getCompositeShopMaterialObject(String shopID)
    {
    	CompositeShopMaterial compositeShopMaterial = new CompositeShopMaterial();

    	SHOP_MATERIAL shopMaterialInfo = SHOP_MATERIAL
				.getShopMaterialByShopId(shopID);
		compositeShopMaterial.setSHOP_MATERIALObject(shopMaterialInfo);

		SHOP_MASTER shopMaster = SHOP_MASTER.getShopMasterObject(shopID);
		compositeShopMaterial.setSHOP_MASTERObject(shopMaster);
		
		//SHOP_MATERIAL表中FORM_ID有值时，查询其他子对象数据;否则从辅料配置表中查出需要配送的辅料基本信息
		String formID = "";
		if(shopMaterialInfo != null && !"".equals(shopMaterialInfo.getFORM_ID()) && shopMaterialInfo.getFORM_ID() != null){
			formID = shopMaterialInfo.getFORM_ID();
		
			BusObjectIterator<SHOP_MATERIAL_DETAIL> shopMaterialDetail = SHOP_MATERIAL_DETAIL
					.getShopMaterialDetailByFormId(formID);
	
			if (shopMaterialDetail != null) {
				while (shopMaterialDetail.hasMoreElements()) {
					SHOP_MATERIAL_DETAIL shopMaterialDetailInfo = (SHOP_MATERIAL_DETAIL) shopMaterialDetail
							.nextElement();
					compositeShopMaterial
							.addSHOP_MATERIAL_DETAILObject(shopMaterialDetailInfo);
				}
			}
	
			BusObjectIterator<ATTACHMENT> attachmentObj = ATTACHMENT
					.getAttachment(formID);
			if (attachmentObj != null) {
				while (attachmentObj.hasMoreElements()) {
					ATTACHMENT attachmentInfo = (ATTACHMENT) attachmentObj
							.nextElement();
					compositeShopMaterial.addATTACHMENTObject(attachmentInfo);
				}
			}
	
			BusObjectIterator<APPROVAL_HISTORY> approvalHistoryObj = APPROVAL_HISTORY
					.getApprovalHistory(formID);
			if (approvalHistoryObj != null) {
				while (approvalHistoryObj.hasMoreElements()) {
					APPROVAL_HISTORY approvalHistoryInfo = (APPROVAL_HISTORY) approvalHistoryObj
							.nextElement();
					compositeShopMaterial
							.addAPPROVAL_HISTORYObject(approvalHistoryInfo);
				}
			}
		}else{
			BusObjectIterator<SHOP_MATERIAL_CONFIGURATION> shopMaterialConfiguration = SHOP_MATERIAL_CONFIGURATION
			.getShopMaterialConfigurationByCompany("1000"); //User.getUserInfo().getCompanyCode()

			if (shopMaterialConfiguration != null) {
				while (shopMaterialConfiguration.hasMoreElements()) {
					SHOP_MATERIAL_CONFIGURATION shopMaterialBaseInfo = (SHOP_MATERIAL_CONFIGURATION) shopMaterialConfiguration
							.nextElement();
					compositeShopMaterial
							.addSHOP_MATERIAL_CONFIGURATIONObject(shopMaterialBaseInfo);
				}
			}
		}

		compositeShopMaterial.makeTransient();
		return compositeShopMaterial;
    }

    public static BusObjectIterator<com.laiyifen.shop.CompositeShopMaterial> getCompositeShopMaterialObjects(com.cordys.cpc.bsf.query.Cursor cursor)
    {
        // TODO implement body
        return null;
    }

    public void onInsert() {
		// Removing the unnecessary objects from the parent object.
		BusObjectHelper.removeEmptyChildren(this);

		SHOP_MATERIAL shopMaterialInfo = this.getSHOP_MATERIALObject();
		if (shopMaterialInfo != null) {
			ShopUtil _formIDGenerator = new ShopUtil();
			String formID = _formIDGenerator.setFormID(null);
			shopMaterialInfo.setFORM_ID(formID);
			
			shopMaterialInfoObject = (SHOP_MATERIAL) ObjectHelper
					.createObjectForInsert(shopMaterialInfo,
							com.laiyifen.shop.SHOP_MATERIAL.class, false);
			shopMaterialInfoObject.insert();
		}

		SHOP_MASTER shopMasterInfo = this.getSHOP_MASTERObject();
		if (shopMasterInfo != null) {
			shopMasterObject = (SHOP_MASTER) ObjectHelper
					.createObjectForInsert(shopMasterInfo,
							com.laiyifen.shop.SHOP_MASTER.class, false);
			shopMasterObject.insert();
		}

		BusObjectIterator<SHOP_MATERIAL_DETAIL> shopMaterialDetailObj = this
				.getSHOP_MATERIAL_DETAILObjects();
		if (shopMaterialDetailObj != null
				&& !"".equals(shopMaterialDetailObj)) {
			while (shopMaterialDetailObj.hasMoreElements()) {
				SHOP_MATERIAL_DETAIL shopTransDistributionInfo = (SHOP_MATERIAL_DETAIL) shopMaterialDetailObj
						.nextElement();
				
				ShopUtil _formIDGenerator = new ShopUtil();
				String ID = _formIDGenerator.setFormID(null);
				shopTransDistributionInfo.setID(ID);
				
				SHOP_MATERIAL_DETAIL shopMaterialDetailObject = (SHOP_MATERIAL_DETAIL) ObjectHelper
						.createObjectForInsert(
								shopTransDistributionInfo,
								com.laiyifen.shop.SHOP_MATERIAL_DETAIL.class,
								false);
				shopMaterialDetailObject.insert();
				shopMaterialDetailObjects.add(shopMaterialDetailObject);
			}
		}

		BusObjectHelper.unlinkChildren(this, SHOP_MATERIAL_DETAIL.class);

		BusObjectIterator<APPROVAL_HISTORY> approvalHistoryObj = this
				.getAPPROVAL_HISTORYObjects();
		if (approvalHistoryObj != null) {
			while (approvalHistoryObj.hasMoreElements()) {
				APPROVAL_HISTORY approvalHistoryInfo = (APPROVAL_HISTORY) approvalHistoryObj
						.nextElement();
				APPROVAL_HISTORY approvalHistoryObject = (APPROVAL_HISTORY) ObjectHelper
						.createObjectForInsert(
								approvalHistoryInfo,
								com.laiyifen.common.core.APPROVAL_HISTORY.class,
								false);
				approvalHistoryObject.insert();
				approvalHistoryObjects.add(approvalHistoryObject);
			}
		}

		BusObjectHelper.unlinkChildren(this, APPROVAL_HISTORY.class);

		BusObjectIterator<ATTACHMENT> attachmentObj = this
				.getATTACHMENTObjects();
		if (attachmentObj != null) {
			while (attachmentObj.hasMoreElements()) {
				ATTACHMENT attachmentInfo = (ATTACHMENT) attachmentObj
						.nextElement();
				ATTACHMENT attachment = (ATTACHMENT) ObjectHelper.createObjectForInsert(
						attachmentInfo,
						com.laiyifen.common.core.ATTACHMENT.class, false);
				attachment.insert();
				attachmentObjects.add(attachment);
			}
		}
		BusObjectHelper.unlinkChildren(this, ATTACHMENT.class);
	}

	/*
	 * 更新复合对象
	 * 
	 * @see com.cordys.cpc.bsf.busobject.BusObject#onUpdate()
	 */
	public void onUpdate() {
		BusObjectHelper.removeEmptyChildren(this);
		SHOP_MATERIAL shopMaterialInfo = this.getSHOP_MATERIALObject();

		if (shopMaterialInfo != null) {
			shopMaterialInfoObject = (SHOP_MATERIAL) ObjectHelper
					.createObjectForUpdate(shopMaterialInfo,
							com.laiyifen.shop.SHOP_MATERIAL.class, false);
			shopMaterialInfoObject.update();
		}

		SHOP_MASTER shopMasterInfo = this.getSHOP_MASTERObject();
		if (shopMasterInfo != null) {
			shopMasterObject = (SHOP_MASTER) ObjectHelper
					.createObjectForUpdate(shopMasterInfo,
							com.laiyifen.shop.SHOP_MASTER.class, false);
			shopMasterObject.update();
		}

		BusObjectIterator<SHOP_MATERIAL_DETAIL> shopMaterialDetailObj = this
				.getSHOP_MATERIAL_DETAILObjects();
		if (shopMaterialDetailObj != null) {
			while (shopMaterialDetailObj.hasMoreElements()) {
				SHOP_MATERIAL_DETAIL shopTransDistributionInfo = (SHOP_MATERIAL_DETAIL) shopMaterialDetailObj
						.nextElement();
				SHOP_MATERIAL_DETAIL shopMaterialDetailObject = (SHOP_MATERIAL_DETAIL) ObjectHelper
						.createObjectForUpdate(
								shopTransDistributionInfo,
								com.laiyifen.shop.SHOP_MATERIAL_DETAIL.class,
								false);
				shopMaterialDetailObject.update();
				shopMaterialDetailObjects.add(shopMaterialDetailObject);
			}
		}

		BusObjectHelper.unlinkChildren(this, SHOP_MATERIAL_DETAIL.class);

		BusObjectIterator<APPROVAL_HISTORY> approvalHistoryObj = this
				.getAPPROVAL_HISTORYObjects();
		if (approvalHistoryObj != null) {
			while (approvalHistoryObj.hasMoreElements()) {
				APPROVAL_HISTORY approvalHistoryInfo = (APPROVAL_HISTORY) approvalHistoryObj
						.nextElement();
				APPROVAL_HISTORY approvalHistoryObject = (APPROVAL_HISTORY) ObjectHelper
						.createObjectForUpdate(
								approvalHistoryInfo,
								com.laiyifen.common.core.APPROVAL_HISTORY.class,
								false);
				approvalHistoryObject.update();
				approvalHistoryObjects.add(approvalHistoryObject);
			}
		}

		BusObjectHelper.unlinkChildren(this, APPROVAL_HISTORY.class);

		BusObjectIterator<ATTACHMENT> attachmentObj = this
				.getATTACHMENTObjects();
		if (attachmentObj != null) {
			while (attachmentObj.hasMoreElements()) {
				ATTACHMENT attachmentInfo = (ATTACHMENT) attachmentObj
						.nextElement();
				ATTACHMENT attachment = (ATTACHMENT) ObjectHelper.createObjectForUpdate(
						attachmentInfo,
						com.laiyifen.common.core.ATTACHMENT.class, false);
				attachment.update();
				attachmentObjects.add(attachment);
			}
		}

		BusObjectHelper.unlinkChildren(this, ATTACHMENT.class);
	}

	/*
	 * 删除复合对象
	 * 
	 * @see com.cordys.cpc.bsf.busobject.BusObject#onDelete()
	 */
	public void onDelete() {
		BusObjectHelper.removeEmptyChildren(this);
		SHOP_MATERIAL shopMaterialInfo = this.getSHOP_MATERIALObject();
		if (shopMaterialInfo != null) {
			shopMaterialInfoObject = (SHOP_MATERIAL) ObjectHelper
					.createObjectForDelete(shopMaterialInfo,
							com.laiyifen.shop.SHOP_MATERIAL.class, true);
			shopMaterialInfoObject.delete();
		}

		SHOP_MASTER shopMasterInfo = this.getSHOP_MASTERObject();
		if (shopMasterInfo != null) {
			shopMasterObject = (SHOP_MASTER) ObjectHelper
					.createObjectForDelete(shopMasterInfo,
							com.laiyifen.shop.SHOP_MASTER.class, true);
			shopMasterObject.delete();
		}

		BusObjectIterator<SHOP_MATERIAL_DETAIL> shopMaterialDetailObj = this
				.getSHOP_MATERIAL_DETAILObjects();
		if (shopMaterialDetailObj != null) {
			while (shopMaterialDetailObj.hasMoreElements()) {
				SHOP_MATERIAL_DETAIL shopTransDistributionInfo = (SHOP_MATERIAL_DETAIL) shopMaterialDetailObj
						.nextElement();
				ObjectHelper.createObjectForDelete(shopTransDistributionInfo,
						com.laiyifen.shop.SHOP_MATERIAL_DETAIL.class, true);
				shopTransDistributionInfo.delete();
			}
		}

		BusObjectIterator<APPROVAL_HISTORY> approvalHistoryObj = this
				.getAPPROVAL_HISTORYObjects();
		if (approvalHistoryObj != null) {
			while (approvalHistoryObj.hasMoreElements()) {
				APPROVAL_HISTORY approvalHistoryInfo = (APPROVAL_HISTORY) approvalHistoryObj
						.nextElement();
				ObjectHelper.createObjectForDelete(approvalHistoryInfo,
						com.laiyifen.common.core.APPROVAL_HISTORY.class, true);
				approvalHistoryInfo.delete();
			}
		}

		BusObjectIterator<ATTACHMENT> attachmentObj = this
				.getATTACHMENTObjects();
		if (attachmentObj != null) {
			while (attachmentObj.hasMoreElements()) {
				ATTACHMENT attachmentInfo = (ATTACHMENT) attachmentObj
						.nextElement();
				ObjectHelper.createObjectForDelete(attachmentInfo,
						com.laiyifen.common.core.ATTACHMENT.class, true);
				attachmentInfo.delete();
			}
		}
	}

	/*
	 * 提交后把复合对象返回前端,并且清空变量
	 * 
	 * @see
	 * com.cordys.cpc.bsf.busobject.BusObject#onAfterCommit(com.cordys.cpc.bsf
	 * .event.AfterCommitObjectEvent)
	 */
	@Override
	public void onAfterCommit(AfterCommitObjectEvent event) {
		// TODO Auto-generated method stub
		super.onAfterCommit(event);
		this.clear();
	}

	/**
	 * 清除本地变量
	 */
	private void clear() {
		shopMaterialInfoObject = null;
		shopMasterObject = null;
		shopMaterialDetailObjects.clear();
		approvalHistoryObjects.clear();
		attachmentObjects.clear();
	}
}