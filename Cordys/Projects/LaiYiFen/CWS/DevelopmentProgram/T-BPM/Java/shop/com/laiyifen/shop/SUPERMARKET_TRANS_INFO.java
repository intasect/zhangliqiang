/*
  This class has been generated by the Code Generator
*/

package com.laiyifen.shop;
import java.text.SimpleDateFormat;
import java.util.Date;

import com.cordys.cpc.bsf.busobject.BusObjectConfig;
import com.cordys.cpc.bsf.busobject.BusObjectIterator;
import com.cordys.cpc.bsf.busobject.BusObjectManager;
import com.cordys.cpc.bsf.busobject.QueryObject;
import com.cordys.cpc.bsf.event.AccessMode;
import com.cordys.cpc.bsf.event.AttributeAccessEvent;
import com.cordys.cpc.bsf.event.AttributeInitializeEvent;
import com.cordys.cpc.bsf.event.BeforeCommitObjectEvent;
import com.eibus.util.logger.CordysLogger;
import com.laiyifen.common.core.APPROVAL_HISTORY;
import com.laiyifen.common.core.ATTACHMENT;
import com.laiyifen.common.core.User;
import com.laiyifen.common.exceptions.LYFException;

public class SUPERMARKET_TRANS_INFO extends SUPERMARKET_TRANS_INFOBase
{
	private static CordysLogger logger=CordysLogger.getCordysLogger(SUPERMARKET_TRANS_INFO.class);
	private User userObj = null;
    public SUPERMARKET_TRANS_INFO()
    {
        this((BusObjectConfig)null);
    }

    public SUPERMARKET_TRANS_INFO(BusObjectConfig config)
    {
        super(config);
    }

    public static BusObjectIterator<com.laiyifen.shop.SUPERMARKET_TRANS_INFO> getSupermarektInfoObjectsByParams(String supermarketname, String contactperson, java.util.Date applicatedatebegin, java.util.Date applicatedateend)
    {
       // 拼装动态查询语句
    	StringBuffer queryText = new StringBuffer();
    //	queryText.append("select * from \"SUPERMARKET_TRANS_INFO\" where 1=1 ");
queryText.append("select FORM_ID,USER_NAME,DEPARTMENT_NAME,APPLICATION_DATE,SUPERMARKET_NAME,POSITION,FLOORS,AREA,CONTACT_PERSON,CONTACT,STATUS,USER_CODE from \"SUPERMARKET_TRANS_INFO\" where 1=1 ");
    	   if (null != supermarketname && !("".equals(supermarketname)) && "" != supermarketname)
           {
    		   queryText.append(" and \"SUPERMARKET_NAME\" LIKE '%").append(supermarketname.trim()).append("%'");
           }
           if (null != contactperson && !("".equals(contactperson)) && "" != contactperson)
           {
        	   queryText.append(" and \"CONTACT_PERSON\" LIKE '%").append(contactperson.trim()).append("%'");
           }
          if (null != applicatedatebegin )
           {
        	   SimpleDateFormat sDateFormat = new SimpleDateFormat("yyyy-MM-dd");      
          	   String datebegin = sDateFormat.format(applicatedatebegin);
        	   queryText.append(" and to_char(APPLICATION_DATE ,'yyyy-MM-dd') >= '").append(datebegin).append("'");
           }
            if (null != applicatedateend )
           {
               SimpleDateFormat sDateFormat = new SimpleDateFormat("yyyy-MM-dd");      
               String dateend = sDateFormat.format(applicatedateend);
        	   queryText.append(" and to_char(APPLICATION_DATE ,'yyyy-MM-dd') <= '").append(dateend).append("'");
           }
           queryText.append(" ORDER BY APPLICATION_DATE DESC ");
           QueryObject query = new QueryObject(queryText.toString());   
        query.setResultClass(SUPERMARKET_TRANS_INFO.class);
        return query.getObjects();
    }
    
    public static void deleteSupermarketTransInfoObject(String formId) throws LYFException
    {
    	BusObjectIterator<ATTACHMENT> attachmentObj = ATTACHMENT
		.getAttachment(formId);
		if (attachmentObj != null) {
			while (attachmentObj.hasMoreElements()) {
				ATTACHMENT attachmentInfo = (ATTACHMENT) attachmentObj
						.nextElement();
				String fileurl =  attachmentInfo.getFILEURL();
				ATTACHMENT.deleteFile(fileurl);
				//attachmentInfo.delete();
			}
		}
		
		BusObjectIterator<APPROVAL_HISTORY> approvalHistoryObj = APPROVAL_HISTORY
				.getApprovalHistory(formId);
		if (approvalHistoryObj != null) {
			while (approvalHistoryObj.hasMoreElements()) {
				APPROVAL_HISTORY approvalHistoryInfo = (APPROVAL_HISTORY) approvalHistoryObj
						.nextElement();
				approvalHistoryInfo.delete();
			}
		}
		
		SUPERMARKET_TRANS_INFO supermarkettransinfo = SUPERMARKET_TRANS_INFO.getSupermarketTransInfoObject(formId);
		supermarkettransinfo.delete();
    }
  @SuppressWarnings({ "unchecked", "static-access" })
	@Override
    public void onBeforeCommit(BeforeCommitObjectEvent event) {

    	super.onBeforeCommit(event);
    	BusObjectIterator<APPROVAL_HISTORY> approvalHistoryObjects = this.getObjectManager().getObjects(BusObjectManager.SCOPE_TRANSACTION).getObjectsByType(APPROVAL_HISTORY.class);
    	while(approvalHistoryObjects.hasMoreElements())
    	{
    		APPROVAL_HISTORY approvalHistoryObject = (APPROVAL_HISTORY)approvalHistoryObjects.nextElement();
    		approvalHistoryObject.setAttributeValueIntegrity(this, this.ATTR_FORM_ID, APPROVAL_HISTORY.ATTR_FORM_ID);
    	}	
    	BusObjectIterator<ATTACHMENT> attachmentObjects = this.getObjectManager().getObjects(BusObjectManager.SCOPE_TRANSACTION).getObjectsByType(ATTACHMENT.class);
    	while(attachmentObjects.hasMoreElements())
    	{
    		ATTACHMENT attachmentObject = (ATTACHMENT)attachmentObjects.nextElement();
    		attachmentObject.setAttributeValueIntegrity(this, this.ATTR_FORM_ID, ATTACHMENT.ATTR_FORM_ID);
    	}
    }
   /*
     * 初始化用户信息
     */
    public void onInitialize_USER_NAME(AttributeInitializeEvent context){
    	context.setInitialValue(this.getCurrUserInfo().getUserName());
    }
   public void onInitialize_DEPARTMENT_NAME(AttributeInitializeEvent context){
    	context.setInitialValue(this.getCurrUserInfo().getDeptName());
    }
    public void onInitialize_DEPARTMENT_CODE(AttributeInitializeEvent context){
    	context.setInitialValue(this.getCurrUserInfo().getDeptCode());
    }
    public void onInitialize_USER_DN(AttributeInitializeEvent context){
    	context.setInitialValue(this.getCurrUserInfo().getUserDN());
    }
    public void onInitialize_USER_CODE(AttributeInitializeEvent context){
    	context.setInitialValue(this.getCurrUserInfo().getUserCode());
    }
  //创建时间
    public void onInitialize_APPLICATION_DATE(AttributeInitializeEvent context){
    	SimpleDateFormat sDateFormat = new SimpleDateFormat("yyyy-MM-dd");      
    	String date = sDateFormat.format(new Date());
    	context.setInitialValue(date);
    }
    
    /*
     * 控制用户名只可读.
     */
    public void onDisplay_USER_NAME(AttributeAccessEvent context){
    	context.setAccess(AccessMode.READONLY);
    }
    /*
     * 控制用户编码只可读.
     */
    public void onDisplay_USER_CODE(AttributeAccessEvent context){
    	context.setAccess(AccessMode.READONLY);
    }
    /*
     * 控制部门名称只可读.
     */
    public void onDisplay_DEPARTMENT_NAME(AttributeAccessEvent context){
    	context.setAccess(AccessMode.READONLY);
    }
    /*
     * 控制填写时间只可读.
     */
    public void onDisplay_APPLICATION_DATE(AttributeAccessEvent context){
    	context.setAccess(AccessMode.READONLY);
    }
    
    public User getCurrUserInfo(){
    	if( this.userObj==null){        		
    	   this.userObj= com.laiyifen.common.core.User.getUserInfo();   
    	}
    	return this.userObj;
    }

}
