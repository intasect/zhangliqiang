/*
  This class has been generated by the Code Generator
*/

package com.laiyifen.shop;

import java.util.Vector;

import com.cordys.cpc.bsf.busobject.BusObjectConfig;
import com.cordys.cpc.bsf.busobject.BusObjectIterator;
import com.cordys.cpc.bsf.event.AfterCommitObjectEvent;
import com.cordys.cpc.bsf.util.ObjectHelper;
import com.eibus.util.logger.CordysLogger;
import com.laiyifen.common.core.ATTACHMENT;
import com.laiyifen.common.core.User;
import com.laiyifen.common.util.BusObjectHelper;
import com.laiyifen.shop.util.ShopUtil;


public class CompositeShopAdsltran extends CompositeShopAdsltranBase
{
	private SHOP_ADSLTRAN shopAdsltranObject = null;
	private ATTACHMENT attachment = null;
	private Vector<ATTACHMENT> attachments = new Vector<ATTACHMENT>();
	private static CordysLogger logger=CordysLogger.getCordysLogger(CompositeShopAdsltran.class);
    public CompositeShopAdsltran()
    {
        this((BusObjectConfig)null);
    }

    public CompositeShopAdsltran(BusObjectConfig config)
    {
        super(config);
    }
    
    public static com.laiyifen.shop.CompositeShopAdsltran getCompositeShopAdsltranObjectByFilter(String shopId, String formId)
    {
    	CompositeShopAdsltran  compositeShopAdsltran = new CompositeShopAdsltran();
    	
    	SHOP_MASTER shopMaster = SHOP_MASTER.getShopMasterObject(shopId);
		compositeShopAdsltran.setSHOP_MASTERObject(shopMaster);
		
    	SHOP_ADSLTRAN shopAdsltran = SHOP_ADSLTRAN.
    			getShopAdsltranObjectByShopId(shopId);
    	compositeShopAdsltran.setSHOP_ADSLTRANObject(shopAdsltran);	
    	if(shopAdsltran!=null){
    		formId = shopAdsltran.getFORM_ID();
    	}
    	BusObjectIterator<ATTACHMENT> attachmentObj = ATTACHMENT
		.getAttachment(formId);
		if (attachmentObj != null) {
			while (attachmentObj.hasMoreElements()) {
				ATTACHMENT attachmentInfo = (ATTACHMENT) attachmentObj
						.nextElement();
				compositeShopAdsltran.addATTACHMENTObject(attachmentInfo);
			}
		}
		compositeShopAdsltran.makeTransient();
        return compositeShopAdsltran;
    }

    

    public static BusObjectIterator<com.laiyifen.shop.CompositeShopAdsltran> getCompositeShopAdsltranObjects(com.cordys.cpc.bsf.query.Cursor cursor)
    {
        // TODO implement body
        return null;
    }

    public void onInsert()
    {
    	BusObjectHelper.removeEmptyChildren(this);

		SHOP_ADSLTRAN shopAdsltran = this.getSHOP_ADSLTRANObject();
		User user = User.getUserInfo();
		if (shopAdsltran != null) {
			ShopUtil _formIDGenerator = new ShopUtil();
			String formID = _formIDGenerator.setFormID(null);
			shopAdsltran.setFORM_ID(formID);
		
			shopAdsltranObject = (SHOP_ADSLTRAN) ObjectHelper
					.createObjectForInsert(shopAdsltran,
							SHOP_ADSLTRAN.class, false);
			shopAdsltranObject.insert();
		}
	 
		BusObjectIterator<ATTACHMENT> attachmentObj = this
		.getATTACHMENTObjects();
		if (attachmentObj != null) {
			while (attachmentObj.hasMoreElements()) {
				ATTACHMENT attachmentInfo = (ATTACHMENT) attachmentObj
						.nextElement();
				attachment = (ATTACHMENT) ObjectHelper.createObjectForInsert(
						attachmentInfo,
						com.laiyifen.common.core.ATTACHMENT.class, false);
				attachment.insert();
				attachments.add(attachment);
			}
		}
		BusObjectHelper.unlinkChildren(this, ATTACHMENT.class);
    }

    public void onUpdate()
    {
    	BusObjectHelper.removeEmptyChildren(this);
    	SHOP_ADSLTRAN shopAdsltran = this.getSHOP_ADSLTRANObject();

		if (shopAdsltran != null) {
			shopAdsltranObject = (SHOP_ADSLTRAN) ObjectHelper
					.createObjectForUpdate(shopAdsltran,
							com.laiyifen.shop.SHOP_ADSLTRAN.class, false);
			shopAdsltranObject.update();
		}
		
		BusObjectIterator<ATTACHMENT> attachmentObj = this
		.getATTACHMENTObjects();
		if (attachmentObj != null) {
			while (attachmentObj.hasMoreElements()) {
				ATTACHMENT attachmentInfo = (ATTACHMENT) attachmentObj
						.nextElement();
				attachment = (ATTACHMENT) ObjectHelper.createObjectForUpdate(
						attachmentInfo,
						com.laiyifen.common.core.ATTACHMENT.class, false);
				attachment.update();
				attachments.add(attachment);
			}
		}
		BusObjectHelper.unlinkChildren(this, ATTACHMENT.class);
    }

    public void onDelete()
    {
    }
    
    @Override
	public void onAfterCommit(AfterCommitObjectEvent event) {
		// TODO Auto-generated method stub
    	super.onAfterCommit(event);
		this.createResponseObject();
		this.clear();
	}

	/**
	 * Create the composite response object.
	 */
	private void createResponseObject() {
		// Persistable objects we can modify, so first make transient.
		this.makeTransient();

		if (shopAdsltranObject != null) {
			this.setSHOP_ADSLTRANObject(shopAdsltranObject);
		}

		for (ATTACHMENT attachment : attachments) {
			this.addATTACHMENTObject(attachment);
		}
	}
	/**
	 * Clears the local variables.
	 */
	private void clear() {
		shopAdsltranObject = null;
		attachment = null;
		attachments.clear();
	}

}
