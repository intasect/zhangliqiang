
/*
 This class has been generated by the Code Generator
 */

package com.laiyifen.shop;

import com.eibus.util.logger.CordysLogger;
import com.cordys.cpc.bsf.busobject.BSF;
import com.cordys.cpc.bsf.busobject.BusObjectConfig;
import com.cordys.cpc.bsf.busobject.BusObjectIterator;
import com.cordys.cpc.bsf.busobject.BusObjectManager;
import com.cordys.cpc.bsf.busobject.QueryObject;
import com.cordys.cpc.bsf.event.AttributeInitializeEvent;
import com.cordys.cpc.bsf.event.BeforeCommitObjectEvent;
import com.laiyifen.common.core.APPROVAL_HISTORY;
import com.laiyifen.common.core.ATTACHMENT;
import com.eibus.util.logger.Severity;
import com.laiyifen.common.core.User;
import com.laiyifen.common.util.CommonUtil;

/*
 * 设置复合对象关系和插入复合对象前初始化.
 * @Author:jiang
 */
public class SHOP_TARGET_INFO extends SHOP_TARGET_INFOBase {
	private static CordysLogger logger = CordysLogger
			.getCordysLogger(SHOP_TARGET_INFO.class);
	private User userObj = null;

	public SHOP_TARGET_INFO() {
		this((BusObjectConfig) null);
	}

	/**
	 * 获取当前人的基本信息
	 * 
	 * @param
	 * @return
	 */
	public User getCurrUserInfo() {
		if (this.userObj == null) {
			this.userObj = User.getUserInfo();
		}
		logger.log(Severity.INFO, "getCurrUserInfo--开始"
				+ this.userObj.toString() + ",time:"
				+ System.currentTimeMillis(), null);
		return this.userObj;
	}

	public SHOP_TARGET_INFO(BusObjectConfig config) {
		super(config);
	}

	/*
	 * 插入复合对象前初始化ShopID,FormID,UserName和UserDN值
	 * 
	 * @see com.cordys.cpc.bsf.busobject.BusObject#onBeforeInsert()
	 */
	public void onBeforeInsert() {
		String formID = this.getFORM_ID();
		String shopID = this.getSHOP_ID();
		if (this.getSHOP_ID() == null || this.getSHOP_ID().equals("")) {
			this.setSHOP_ID(shopID);
		}
		if (this.getFORM_ID() == null || this.getFORM_ID().equals("")) {
			this.setFORM_ID(formID);
		}

		if (this.getUSER_NAME() == null || this.getUSER_NAME().equals("")) {
			this.setUSER_NAME(this.getCurrUserInfo().getUserName());
		}

		if (this.getUSER_DN() == null || this.getUSER_DN().equals("")) {
			this.setUSER_DN(BSF.getUser());
		}

		if (this.getDEPARTMENT_CODE() == null
				|| this.getDEPARTMENT_CODE().equals("")) {
			this.setDEPARTMENT_CODE(this.getCurrUserInfo().getDeptCode());
		}

		if (this.getDEPARTMENT_NAME() == null
				|| this.getDEPARTMENT_NAME().equals("")) {
			this.setDEPARTMENT_NAME(this.getCurrUserInfo().getDeptName());
		}
	}

	/**
	 * 通过查询条件获取目标调查表查询页面的数据
	 * 
	 * @param companyName
	 *            所属子公司
	 * @param propertyAddress
	 *            产权地址
	 * @param rentPeriod
	 *            租期
	 * @param propertyName
	 *            产权名称
	 * @param startDate
	 *            创建开始时间
	 * @param endDate
	 *            创建结束时间
	 * @return SHOP_TARGET_INFO对象
	 */
	public static BusObjectIterator<com.laiyifen.shop.SHOP_TARGET_INFO> getShopTargetInfoObjectByFilter(
			String companyName, String propertyAddress, String rentPeriod,
			String propertyName, String startDate, String endDate,
			String userId, String formType) {
		if (companyName == null)
			companyName = "";
		if (propertyAddress == null)
			propertyAddress = "";
		if (rentPeriod == null)
			rentPeriod = "";
		if (startDate == null)
			startDate = "";
		if (endDate == null)
			endDate = "";
		if (propertyName == null)
			propertyName = "";
		if (userId == null)
			userId = "";
		if (formType == null)
			formType = "";
		String queryText = "select s.SHOP_ID,s.FORM_ID,s.APPLICATION_DATE,s.RENTPERIOD,s.PROPERTY_NAME,m.CORP_NAME as DEPARTMENT_NAME,m.SHOP_DETAIL_ADDR as PROPERTY_ADDRESS,s.FORM_TYPE,s.STATUS "
				+ "FROM SHOP_TARGET_INFO s,SHOP_MASTER m "
				+ "WHERE s.SHOP_ID=m.SHOP_ID ";
		if (!"".equals(companyName)) {
			queryText = queryText + "and m.CORP_NAME like '%" + companyName
					+ "%' ";
		}
		if (!"".equals(propertyAddress)) {
			queryText = queryText + "and m.SHOP_DETAIL_ADDR like '%"
					+ propertyAddress + "%' ";
		}
		if (!"".equals(rentPeriod)) {
			queryText = queryText + "and s.RENTPERIOD='" + rentPeriod + "' ";
		}
		if (!"".equals(propertyName)) {
			queryText = queryText + "and s.PROPERTY_NAME like '%"
					+ propertyName + "%' ";
		}
		if (!"".equals(startDate)) {
			queryText = queryText + "and s.APPLICATION_DATE >= to_date('"
					+ startDate + "','yyyy-MM-dd') ";
		}
		if (!"".equals(endDate)) {
			queryText = queryText + "and s.APPLICATION_DATE <= to_date('"
					+ endDate + "','yyyy-MM-dd') ";
		}
		if (!"".equals(userId)) {
			queryText = queryText + "and s.USER_CODE = '" + userId + "' ";
		}
		if (!"".equals(formType)) {
			queryText = queryText + "and s.STATUS != '" + formType + "' ";
		}
		queryText = queryText + "order by s.APPLICATION_DATE desc ";
		QueryObject query = new QueryObject(queryText);
		query.setResultClass(SHOP_TARGET_INFO.class);
		return query.getObjects();
	}

	/*
	 * 提交复合对象前设置子对象FORM_ID关系.
	 * 
	 * @see
	 * com.cordys.cpc.bsf.busobject.BusObject#onBeforeCommit(com.cordys.cpc.
	 * bsf.event.BeforeCommitObjectEvent)
	 */
	@SuppressWarnings( { "unchecked", "static-access" })
	public void onBeforeCommit(BeforeCommitObjectEvent event) {

		super.onBeforeCommit(event);

		BusObjectIterator<SHOP_TARGET_CIRCLE_INFO> BusnessCircleObjects = this
				.getObjectManager().getObjects(
						BusObjectManager.SCOPE_TRANSACTION).getObjectsByType(
						SHOP_TARGET_CIRCLE_INFO.class);
		while (BusnessCircleObjects.hasMoreElements()) {
			SHOP_TARGET_CIRCLE_INFO BusnessCircleObject = (SHOP_TARGET_CIRCLE_INFO) BusnessCircleObjects
					.nextElement();
			BusnessCircleObject.setAttributeValueIntegrity(this,
					this.ATTR_FORM_ID, SHOP_TARGET_CIRCLE_INFO.ATTR_FORM_ID);
		}

		BusObjectIterator<SHOP_TARGET_CHECK> shopCheckObjects = this
				.getObjectManager().getObjects(
						BusObjectManager.SCOPE_TRANSACTION).getObjectsByType(
						SHOP_TARGET_CHECK.class);
		while (shopCheckObjects.hasMoreElements()) {
			SHOP_TARGET_CHECK shopCheckObject = (SHOP_TARGET_CHECK) shopCheckObjects
					.nextElement();
			shopCheckObject.setAttributeValueIntegrity(this, this.ATTR_FORM_ID,
					SHOP_TARGET_CHECK.ATTR_FORM_ID);
		}

		BusObjectIterator<SHOP_TARGET_ASSESMENT> shopAssesmentObjects = this
				.getObjectManager().getObjects(
						BusObjectManager.SCOPE_TRANSACTION).getObjectsByType(
						SHOP_TARGET_ASSESMENT.class);
		while (shopAssesmentObjects.hasMoreElements()) {
			SHOP_TARGET_ASSESMENT shopAssesmentObject = (SHOP_TARGET_ASSESMENT) shopAssesmentObjects
					.nextElement();
			shopAssesmentObject.setAttributeValueIntegrity(this,
					this.ATTR_FORM_ID, SHOP_TARGET_ASSESMENT.ATTR_FORM_ID);
		}

		BusObjectIterator<SHOP_TARGET_ESTIMATION> shopEstimationObjects = this
				.getObjectManager().getObjects(
						BusObjectManager.SCOPE_TRANSACTION).getObjectsByType(
						SHOP_TARGET_ESTIMATION.class);
		while (shopEstimationObjects.hasMoreElements()) {
			SHOP_TARGET_ESTIMATION shopEstimationObject = (SHOP_TARGET_ESTIMATION) shopEstimationObjects
					.nextElement();
			shopEstimationObject.setAttributeValueIntegrity(this,
					this.ATTR_FORM_ID, SHOP_TARGET_ESTIMATION.ATTR_FORM_ID);
		}

		BusObjectIterator<APPROVAL_HISTORY> approvalHistoryObjects = this
				.getObjectManager().getObjects(
						BusObjectManager.SCOPE_TRANSACTION).getObjectsByType(
						APPROVAL_HISTORY.class);
		while (approvalHistoryObjects.hasMoreElements()) {
			APPROVAL_HISTORY approvalHistoryObject = (APPROVAL_HISTORY) approvalHistoryObjects
					.nextElement();
			approvalHistoryObject.setAttributeValueIntegrity(this,
					this.ATTR_FORM_ID, APPROVAL_HISTORY.ATTR_FORM_ID);
		}

		BusObjectIterator<ATTACHMENT> attachmentObjects = this
				.getObjectManager().getObjects(
						BusObjectManager.SCOPE_TRANSACTION).getObjectsByType(
						ATTACHMENT.class);
		while (attachmentObjects.hasMoreElements()) {
			ATTACHMENT attachmentObject = (ATTACHMENT) attachmentObjects
					.nextElement();
			attachmentObject.setAttributeValueIntegrity(this,
					this.ATTR_FORM_ID, ATTACHMENT.ATTR_FORM_ID);
		}

		BusObjectIterator<SHOP_MASTER> shopMasterObjects = this
				.getObjectManager().getObjects(
						BusObjectManager.SCOPE_TRANSACTION).getObjectsByType(
						SHOP_MASTER.class);
		while (shopMasterObjects.hasMoreElements()) {
			SHOP_MASTER shopMasterObject = (SHOP_MASTER) shopMasterObjects
					.nextElement();
			shopMasterObject.setAttributeValueIntegrity(this,
					this.ATTR_SHOP_ID, SHOP_MASTER.ATTR_SHOP_ID);
		}
	}
    /*
	/*
	 * 初始化用户名
	 */
	public void onInitialize_USER_NAME(AttributeInitializeEvent context) {
		context.setInitialValue(this.getCurrUserInfo().getUserName());
	}

	/*
	 * 初始化用户编码
	 */
	public void onInitialize_USER_CODE(AttributeInitializeEvent context) {
		context.setInitialValue(this.getCurrUserInfo().getUserCode());
	}

	/*
	 * 初始化部门名称
	 */
	public void onInitialize_DEPARTMENT_NAME(AttributeInitializeEvent context) {
		context.setInitialValue(this.getCurrUserInfo().getDeptName());
	}

	/*
	 * 初始化申请日期
	 */
	public void onInitialize_APPLICATION_DATE(AttributeInitializeEvent context) {
		context.setInitialValue(CommonUtil.getSystemCurrentDate());
	}

	/*
	 * 初始化公司编码
	 */
	public void onInitialize_SUBCOMPANY_CODE(AttributeInitializeEvent context) {
		context.setInitialValue(this.getCurrUserInfo().getCompanyCode());
	}

	/*
	 * 初始化公司名称
	 */
	public void onInitialize_SUBCOMPANY_NAME(AttributeInitializeEvent context) {
		context.setInitialValue(this.getCurrUserInfo().getCompanyName());
	}

	/*
	 * 初始化角色
	 */
	public void onInitialize_EXT1(AttributeInitializeEvent context) {
		context.setInitialValue(com.laiyifen.common.core.User.getUserInfo()
				.getRoleNameList());
	}

	/*
	 * 初始化用户名称
	 */
	public void onInitialize_EXT2(AttributeInitializeEvent context) {
		context.setInitialValue(com.laiyifen.common.core.User.getUserInfo()
				.getUserName());
	}

	public static com.laiyifen.shop.SHOP_TARGET_INFO getShopTargetInfoByShopid(
			String shopid) {
		String queryText = "select USE_AREA,DOOR_WIDTH,INNER_DOOR_WIDTH,SHOP_DEPTH,RENT_FREE,ONEROOM,MAIN_BUSROUTES,NEAR_BANK from \"SHOP_TARGET_INFO\" where \"SHOP_ID\" = :SHOP_ID";
		QueryObject query = new QueryObject(queryText);
		query.addParameter("SHOP_ID", "SHOP_TARGET_INFO.SHOP_ID",
				QueryObject.PARAM_STRING, shopid);// NOPMD
		query.setResultClass(SHOP_TARGET_INFO.class);
		return (SHOP_TARGET_INFO) query.getObject();
	}
}
