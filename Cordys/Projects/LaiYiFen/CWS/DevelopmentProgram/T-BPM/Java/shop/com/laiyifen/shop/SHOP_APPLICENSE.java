/*
  This class has been generated by the Code Generator
 */

package com.laiyifen.shop;

import java.text.SimpleDateFormat;
import java.util.Date;

import com.cordys.cpc.bsf.busobject.BusObjectConfig;
import com.cordys.cpc.bsf.busobject.BusObjectIterator;
import com.cordys.cpc.bsf.busobject.BusObjectManager;
import com.cordys.cpc.bsf.busobject.QueryObject;
import com.cordys.cpc.bsf.event.AccessMode;
import com.cordys.cpc.bsf.event.AttributeAccessEvent;
import com.cordys.cpc.bsf.event.AttributeInitializeEvent;
import com.cordys.cpc.bsf.event.BeforeCommitObjectEvent;
import com.eibus.util.logger.CordysLogger;
import com.laiyifen.common.core.ATTACHMENT;
import com.laiyifen.common.core.User;

public class SHOP_APPLICENSE extends SHOP_APPLICENSEBase {
	
	private User userObj = null;
	private static CordysLogger logger = CordysLogger.getCordysLogger(SUPERMARKET_TRANS_INFO.class);

	public SHOP_APPLICENSE() {
		this((BusObjectConfig) null);
	}

	public SHOP_APPLICENSE(BusObjectConfig config) {
		super(config);
	}

	public static com.laiyifen.shop.SHOP_APPLICENSE getShopApplicenseByShopId(String shopId) {
		StringBuffer queryText = new StringBuffer();
		QueryObject query = null;

		queryText.append("select * from SHOP_APPLICENSE where \"SHOP_ID\" = :SHOP_ID ");

		query = new QueryObject(queryText.toString());
		query.addParameter("SHOP_ID", "SHOP_APPLICENSE.SHOP_ID",QueryObject.PARAM_STRING, shopId);
		query.setResultClass(SHOP_APPLICENSE.class);
		return (SHOP_APPLICENSE) query.getObject();
	}

	public static BusObjectIterator<com.laiyifen.shop.SHOP_MASTER> getShopMasterObjectByFilter(
			String shopSerialno, String shopNo, String shopArea,
			String shopName, String shopShortname, String corpName,
			String shopAddr) {
		
		User user = com.laiyifen.common.core.User.getUserInfo();
		String companyCode = user.getCompanyCode();
		
		// 拼装动态查询语句
		StringBuffer queryText = new StringBuffer();
		queryText.append("SELECT SHOP_ID,SHOP_SERIALNO,SHOP_SERIALNO,SHOP_NAME,SHOP_SHORTNAME,CORP_NAME,SHOP_ADDR,OPEN_DATE,SHOP_STATUS_DESC,SHOP_STATUS FROM \"SHOP_MASTER\" where 1=1 ");
		if (companyCode != null && !"1000".equals(companyCode.trim())) {
			queryText.append(" and CORP_CODE = '").append(companyCode).append("'");
		}
		if (null != shopSerialno && !"".equals(shopSerialno.trim())) {
			queryText.append(" and \"SHOP_SERIALNO\" = '").append(shopSerialno).append("'");
		}
		if (null != shopNo && !"".equals(shopNo.trim())) {
			queryText.append(" and \"SHOP_NO\" = '").append(shopNo).append("'");
		}
		if (null != shopArea && !"".equals(shopArea.trim())) {
			queryText.append(" and \"SHOP_AREA\" = '").append(shopArea).append("'");
		}
		if (null != shopName && !"".equals(shopName.trim())) {
			queryText.append(" and \"SHOP_NAME\" LIKE '%").append(shopName.trim()).append("%'");
		}
		if (null != shopShortname && !"".equals(shopShortname.trim())) {
			queryText.append(" and \"SHOP_SHORTNAME\" LIKE '%").append(shopShortname.trim()).append("%'");
		}
		if (null != corpName && !"".equals(corpName.trim())) {
			queryText.append(" and \"CORP_NAME\" LIKE '%").append(corpName.trim()).append("%'");
		}
		if (null != shopAddr && !"".equals(shopAddr.trim())) {
			queryText.append(" and \"SHOP_ADDR\" LIKE '%").append(shopAddr.trim()).append("%'");
		}
		queryText.append(" ORDER BY OPEN_DATE DESC ");
		
		QueryObject query = new QueryObject(queryText.toString());
		
		query.setResultClass(SHOP_MASTER.class);
		return query.getObjects();
	}

	@SuppressWarnings({ "unchecked", "static-access" })
	@Override
	public void onBeforeCommit(BeforeCommitObjectEvent event) {

		super.onBeforeCommit(event);
		BusObjectIterator<ATTACHMENT> attachmentObjects = this.getObjectManager()
				.getObjects(BusObjectManager.SCOPE_TRANSACTION).getObjectsByType(ATTACHMENT.class);
		while (attachmentObjects.hasMoreElements()) {
			ATTACHMENT attachmentObject = (ATTACHMENT) attachmentObjects.nextElement();
			attachmentObject.setAttributeValueIntegrity(this,this.ATTR_FORM_ID, ATTACHMENT.ATTR_FORM_ID);
		}
	}

	/***
	 ** 初始化用户信息
	 */

	public void onInitialize_USER_NAME(AttributeInitializeEvent context) {
		context.setInitialValue(this.getCurrUserInfo().getUserName());
	}

	public void onInitialize_DEPARTMENT_NAME(AttributeInitializeEvent context) {
		context.setInitialValue(this.getCurrUserInfo().getDeptName());
	}

	public void onInitialize_DEPARTMENT_CODE(AttributeInitializeEvent context) {
		context.setInitialValue(this.getCurrUserInfo().getDeptCode());
	}

	public void onInitialize_USER_DN(AttributeInitializeEvent context) {
		context.setInitialValue(this.getCurrUserInfo().getUserDN());
	}

	public void onInitialize_USER_CODE(AttributeInitializeEvent context) {
		context.setInitialValue(this.getCurrUserInfo().getUserCode());
	}

	public void onInitialize_COMPANY_CODE(AttributeInitializeEvent context) {
		context.setInitialValue(this.getCurrUserInfo().getCompanyCode());
	}

	public void onInitialize_COMPANY_NAME(AttributeInitializeEvent context) {
		context.setInitialValue(this.getCurrUserInfo().getCompanyName());
	}

	// 创建时间
	public void onInitialize_APPLICATION_DATE(AttributeInitializeEvent context) {
		SimpleDateFormat sDateFormat = new SimpleDateFormat("yyyy-MM-dd");
		String date = sDateFormat.format(new Date());
		context.setInitialValue(date);
	}

	/*
	 * 控制用户名只可读.
	 */
	public void onDisplay_USER_NAME(AttributeAccessEvent context) {
		context.setAccess(AccessMode.READONLY);
	}

	/*
	 * 控制用户编码只可读.
	 */
	public void onDisplay_USER_CODE(AttributeAccessEvent context) {
		context.setAccess(AccessMode.READONLY);
	}

	/*
	 * 控制部门名称只可读.
	 */
	public void onDisplay_DEPARTMENT_NAME(AttributeAccessEvent context) {
		context.setAccess(AccessMode.READONLY);
	}

	/*
	 * 控制填写时间只可读.
	 */
	public void onDisplay_APPLICATION_DATE(AttributeAccessEvent context) {
		context.setAccess(AccessMode.READONLY);
	}

	public User getCurrUserInfo() {
		if (this.userObj == null) {
			this.userObj = com.laiyifen.common.core.User.getUserInfo();
		}
		return this.userObj;
	}

}
