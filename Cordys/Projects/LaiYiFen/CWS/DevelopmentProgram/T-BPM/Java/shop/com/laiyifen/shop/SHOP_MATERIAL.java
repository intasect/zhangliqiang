/*
  This class has been generated by the Code Generator
*/

package com.laiyifen.shop;

import com.cordys.cpc.bsf.busobject.BusObjectConfig;
import com.cordys.cpc.bsf.busobject.BusObjectIterator;
import com.cordys.cpc.bsf.busobject.BusObjectManager;
import com.cordys.cpc.bsf.busobject.QueryObject;
import com.cordys.cpc.bsf.event.AccessMode;
import com.cordys.cpc.bsf.event.AttributeAccessEvent;
import com.cordys.cpc.bsf.event.AttributeInitializeEvent;
import com.cordys.cpc.bsf.event.BeforeCommitObjectEvent;
import com.laiyifen.common.core.APPROVAL_HISTORY;
import com.laiyifen.common.core.ATTACHMENT;
import com.laiyifen.common.core.User;
import com.laiyifen.common.util.CommonUtil;

public class SHOP_MATERIAL extends SHOP_MATERIALBase
{
	private User userObj = null;
	
    public SHOP_MATERIAL()
    {
        this((BusObjectConfig)null);
    }

    public SHOP_MATERIAL(BusObjectConfig config)
    {
        super(config);
    }
    
    public User getCurrUserInfo()
    {
    	if( this.userObj==null)
    	{
    		this.userObj= User.getUserInfo();
    	}
    	return this.userObj;
    }

    /**
     * 通过门店ID获取辅料配送单数据
     * @param shopID	门店ID
     * @return SHOP_MATERIAL对象
     */
    public static com.laiyifen.shop.SHOP_MATERIAL getShopMaterialByShopId(String shopID)
    {
    	String queryText = "select * from \"SHOP_MATERIAL\" where \"SHOP_ID\" = :SHOP_ID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("SHOP_ID", "SHOP_MATERIAL.SHOP_ID", QueryObject.PARAM_STRING, shopID);
        query.setResultClass(SHOP_MATERIAL.class);
        return (SHOP_MATERIAL)query.getObject();
    }
    
    /**
     * 通过查询条件获取辅料配送单查询页面的数据
     * @param shopNo	门店编号
     * @param shopName	门店名称
     * @param sapNo	SAP编码
     * @param shopInCode	店中店门店code
     * @param highCabinetsShop	高柜店门店code
     * @param startDate	预计竣工开始时间
     * @param endDate	预计竣工结束时间
     * @param subCompany	子公司名称
     * @return SHOP_MATERIAL对象
     */
    public static BusObjectIterator<com.laiyifen.shop.SHOP_MATERIAL> getShopMaterialObjectsByConditions(String shopNo, String shopName, String sapNo, String shopInCode, String highCabinetsShop, String startDate, String endDate, String subCompany)
    {
		StringBuffer queryText = new StringBuffer();
        queryText.append("select t.shop_id, t.sap_no,t.shop_no,t.shop_name,m.shop_propertiesname,m.expected_results,m.completed_date,m.change_counter_date " +
				"from SHOP_MATERIAL m,SHOP_MASTER t where m.shop_id = t.shop_id ");
        if(shopNo!=null && !shopNo.trim().equals("")){
			queryText.append("and t.shop_no like '%").append(shopNo).append("%' ");
		}
        if(shopName!=null && !shopName.trim().equals("")){
			queryText.append("and t.shop_name like '%").append(shopName).append("%' ");
		}
        if(sapNo!=null && !sapNo.trim().equals("")){
			queryText.append("and t.sap_no like '%").append(sapNo).append("%' ");
		}
        if(subCompany!=null && !subCompany.trim().equals("")){
        	queryText.append("and m.company_name like '%").append(subCompany).append("%' ");
		}
        if(shopInCode!=null && !shopInCode.trim().equals("")){
			queryText.append("and m.shop_in_code = '").append(shopInCode).append("' ");
		}
		if(highCabinetsShop!=null && !highCabinetsShop.trim().equals("")){
			queryText.append("and m.high_cabinets_shop = '").append(highCabinetsShop).append("' ");
		}
        if(startDate!=null && !startDate.trim().equals("")){
			queryText.append("and m.completed_date >= to_date('").append(startDate).append("','yyyy-MM-dd') ");
		}
		if(endDate!=null && !endDate.trim().equals("")){
			queryText.append("and m.completed_date <= to_date('").append(endDate).append("','yyyy-MM-dd')");
		}
		QueryObject query = new QueryObject(queryText.toString());
		query.setResultClass(SHOP_MATERIAL.class);
		return query.getObjects();
    }
    
    /*
     * 提交复合对象前设置子对象FORM_ID关系.
     * @see com.cordys.cpc.bsf.busobject.BusObject#onBeforeCommit(com.cordys.cpc.bsf.event.BeforeCommitObjectEvent)
     */
    @SuppressWarnings({ "unchecked", "static-access" })
	public void onBeforeCommit(BeforeCommitObjectEvent event) {

    	super.onBeforeCommit(event);
    	
    	BusObjectIterator<SHOP_MATERIAL_DETAIL> ShopMaterialDetailObjects = this.getObjectManager().getObjects(BusObjectManager.SCOPE_TRANSACTION).getObjectsByType(SHOP_MATERIAL_DETAIL.class);
    	while(ShopMaterialDetailObjects.hasMoreElements())
    	{
    		SHOP_MATERIAL_DETAIL ShopMaterialDetailObject = (SHOP_MATERIAL_DETAIL)ShopMaterialDetailObjects.nextElement();
    		ShopMaterialDetailObject.setAttributeValueIntegrity(this, this.ATTR_FORM_ID, SHOP_MATERIAL_DETAIL.ATTR_FORM_ID);
         }
    	
    	BusObjectIterator<APPROVAL_HISTORY> approvalHistoryObjects = this.getObjectManager().getObjects(BusObjectManager.SCOPE_TRANSACTION).getObjectsByType(APPROVAL_HISTORY.class);
    	while(approvalHistoryObjects.hasMoreElements())
    	{
    		APPROVAL_HISTORY approvalHistoryObject = (APPROVAL_HISTORY)approvalHistoryObjects.nextElement();
    		approvalHistoryObject.setAttributeValueIntegrity(this, this.ATTR_FORM_ID, APPROVAL_HISTORY.ATTR_FORM_ID);
    	}
    	
    	BusObjectIterator<ATTACHMENT> attachmentObjects = this.getObjectManager().getObjects(BusObjectManager.SCOPE_TRANSACTION).getObjectsByType(ATTACHMENT.class);
    	while(attachmentObjects.hasMoreElements())
    	{
    		ATTACHMENT attachmentObject = (ATTACHMENT)attachmentObjects.nextElement();
    		attachmentObject.setAttributeValueIntegrity(this, this.ATTR_FORM_ID, ATTACHMENT.ATTR_FORM_ID);
    	}
    }
    
    /*
     * 初始化用户名
     */
    public void onInitialize_USER_NAME(AttributeInitializeEvent context){
    	context.setInitialValue(this.getCurrUserInfo().getUserName());
    }
    
    /*
     * 初始化用户编码
     */
    public void onInitialize_USER_CODE(AttributeInitializeEvent context)
    {
        context.setInitialValue(this.getCurrUserInfo().getUserDN());
    }
    
    /*
     * 初始化部门名称
     */
    public void onInitialize_DEPARTMENT_NAME(AttributeInitializeEvent context)
    {
    	context.setInitialValue(this.getCurrUserInfo().getDeptName());
    }
    /*
     * 初始化部门编码
     */
    public void onInitialize_DEPARTMENT_CODE(AttributeInitializeEvent context)
    {
    	context.setInitialValue(this.getCurrUserInfo().getDeptCode());
    }

    /*
     * 初始化填写时间
     */
    public void onInitialize_APPLICATION_DATE(AttributeInitializeEvent context)
    {
    	context.setInitialValue(CommonUtil.getSystemCurrentDate());
    }

    /*
     * 初始化公司编码
     */
    public void onInitialize_COMPANY_CODE(AttributeInitializeEvent context)
    {
    	context.setInitialValue(this.getCurrUserInfo().getCompanyCode());
    }
    
    /*
     * 初始化公司名称
     */
    public void onInitialize_COMPANY_NAME(AttributeInitializeEvent context)
    {
    	context.setInitialValue(this.getCurrUserInfo().getCompanyName());
    }
    
    /*
     * 控制用户名只可读.
     */
    public void onDisplay_USER_NAME(AttributeAccessEvent context){
    	context.setAccess(AccessMode.READONLY);
    }
    /*
     * 控制用户编码只可读.
     */
    public void onDisplay_USER_CODE(AttributeAccessEvent context){
    	context.setAccess(AccessMode.READONLY);
    }
    /*
     * 控制部门名称只可读.
     */
    public void onDisplay_DEPARTMENT_NAME(AttributeAccessEvent context){
    	context.setAccess(AccessMode.READONLY);
    }

}