/*
  This class has been generated by the Code Generator
*/

package com.laiyifen.common.core;

import com.cordys.cpc.bsf.busobject.BusObjectConfig;
import com.cordys.cpc.bsf.busobject.BusObjectIterator;
import com.laiyifen.common.inbox.InboxUtil;
import com.laiyifen.common.inbox.InboxConstants;


public class InboxHandler {
	/**
	 * 获取消息数量
	 * @param userdn  用户dn，not null
     * @param processtype	business_idenfier中的ProcessType
     * @param processcode	business_idenfier中的ProcessCode
     * @param sender  发送人，Info的sender，userDN
     * @param fromdate  起始时间，格式：2011-9-10或20110910
     * @param todate  截止时间，格式：2011-9-10或20110910
     * @param subject  Info的subject
     * @param iscomplete  0为未读，1为已读
     * @return	QueryAdminData的response，xml
	 */
	public static int getInfoCount(String userdn, String processtype, String processcode, String sender, String fromdate, String todate, String subject, String iscomplete)
    {
		String querytext = InboxConstants.REQUEST_GET_INFO_COUNT;
		String conditions = InboxUtil.getConditions(processtype, processcode, sender, fromdate, todate, subject);
		String request = querytext.replace("$USERDN$", userdn).replace("$CONDITIONS$", conditions);
		if(iscomplete.equals("0")){
			request = request.replace("$STATE$", "='0'");
		}else{
			request = request.replace("$STATE$", "='1'");
		}
		return InboxUtil.queryAdminData(request);
    }
	/**
	 * 获取消息详细信息
	 * @param userdn  用户dn，not null
     * @param processtype	business_idenfier中的ProcessType
     * @param processcode	business_idenfier中的ProcessCode
     * @param sender  发送人，Info的sender，userDN
     * @param fromdate  起始时间，格式：2011-9-10或20110910
     * @param todate  截止时间，格式：2011-9-10或20110910
     * @param subject  Info的subject
     * @param fromrownum  起始行数，分页用，not null
     * @param torownum  截止行数，分页用，not null
     * @param iscomplete  0为未读，1为已读
     * @return  QueryAdminData的response，xml
	 */
    public static int getInfoDetails(String userdn, String processtype, String processcode, String sender, String fromdate, String todate, String subject, String fromrownum, String torownum, String iscomplete)
    {
    	String querytext = InboxConstants.REQUEST_GET_INFO_DETAILS;
		String conditions = InboxUtil.getConditions(processtype, processcode, sender, fromdate, todate, subject);
		String request = querytext.replace("$USERDN$", userdn).replace("$CONDITIONS$", conditions).replace("$FROMROWNUM$", fromrownum).replace("$TOROWNUM$", torownum);
		if(iscomplete.equals("0")){
			request = request.replace("$STATE$", "='0'");
		}else{
			request = request.replace("$STATE$", "='1'");
		}
		return InboxUtil.queryAdminData(request);
    }
    /**
	 * 获取任务数量
	 * @param userdn  用户dn， not null
     * @param processtype	business_idenfier中的ProcessType
     * @param processcode	business_idenfier中的ProcessCode
     * @param sender  发送人，Task的sender，userDN
     * @param fromdate  起始时间，格式：2011-9-10或20110910
     * @param todate  截止时间，格式：2011-9-10或20110910
     * @param subject  Task的subject
     * @param iscomplete  0为未完成，1为已完成
     * @return	QueryAdminData的response，xml
	 */
    public static int getTaskCount(String userdn, String processtype, String processcode, String sender, String fromdate, String todate, String subject, String iscomplete)
    {
    	String querytext = InboxConstants.REQUEST_GET_TASK_COUNT;
		String conditions = InboxUtil.getConditions(processtype, processcode, sender, fromdate, todate, subject);
		String request = querytext.replace("$USERDN$", userdn).replace("$CONDITIONS$", conditions);
		if(iscomplete.equals("0")){
			request = request.replace("$STATE$", "in ('1', '2', '3', '4', '7', '10')");
		}else{
			request = request.replace("$STATE$", "in ('5', '8')");
		}
		return InboxUtil.queryAdminData(request);
    }
	/**
	 * 获取任务详细信息
	 * @param userdn  用户dn， not null
     * @param processtype	business_idenfier中的ProcessType
     * @param processcode	business_idenfier中的ProcessCode
     * @param sender  发送人，Task的sender，userDN
     * @param fromdate  起始时间，格式：2011-9-10或20110910
     * @param todate  截止时间，格式：2011-9-10或20110910
     * @param subject  Task的subject
     * @param fromrownum  起始行数，分页用，not null
     * @param torownum  截止行数，分页用，not null
     * @param iscomplete  0为未完成，1为已完成
     * @return  QueryAdminData的response，xml
	 */
    public static int getTaskDetails(String userdn, String processtype, String processcode, String sender, String fromdate, String todate, String subject, String fromrownum, String torownum, String iscomplete)
    {
    	String querytext = InboxConstants.REQUEST_GET_TASK_DETAILS;
		String conditions = InboxUtil.getConditions(processtype, processcode, sender, fromdate, todate, subject);
		String request = querytext.replace("$USERDN$", userdn).replace("$CONDITIONS$", conditions).replace("$FROMROWNUM$", fromrownum).replace("$TOROWNUM$", torownum);
		if(iscomplete.equals("0")){
			request = request.replace("$STATE$", "in ('1', '2', '3', '4', '7', '10')");
		}else{
			request = request.replace("$STATE$", "in ('5', '8')");
		}
		return InboxUtil.queryAdminData(request);
    }
    /**
	 * 获取超时任务数量
	 * @param userdn  用户dn， not null
     * @param fromdate  起始时间，格式：2011-9-10或20110910
     * @param todate  截止时间，格式：2011-9-10或20110910
     * @param iscomplete  0为未完成，1为已完成，空为未完成和已完成
     * @return	QueryAdminData的response，xml
	 */
    public static int getDueTaskCount(String userdn, String fromdate, String todate, String iscomplete)
    {
    	String querytext = InboxConstants.REQUEST_GET_DUE_TASK_COUNT;
    	String conditions = InboxUtil.getConditions("", "", "", fromdate, todate, "");
    	String due_conditions;
    	if(iscomplete.equals("") == true){
    		due_conditions = "((STATE IN ('1', '2', '3', '4', '7', '10') AND DUE_DATE &lt; SYS_EXTRACT_UTC(SYSTIMESTAMP)) OR (STATE IN ('5', '8') AND DUE_DATE &lt; COMPLETION_DATE))";
    	}else{
    		if(iscomplete.equals("0") == true){
    			due_conditions = "STATE IN ('1', '2', '3', '4', '7', '10') AND DUE_DATE &lt; SYS_EXTRACT_UTC(SYSTIMESTAMP)";
    		}else{
    			due_conditions = "STATE IN ('5', '8') AND DUE_DATE &lt; COMPLETION_DATE";
    		}
    	}
    	String request = querytext.replace("$USERDN$", userdn).replace("$CONDITIONS$", conditions + "AND " + due_conditions);
    	return InboxUtil.queryAdminData(request);
    }
    /**
	 * 获取超时任务详细信息
	 * @param userdn  用户dn， not null
     * @param fromdate  起始时间，格式：2011-9-10或20110910
     * @param todate  截止时间，格式：2011-9-10或20110910
     * @param fromrownum  起始行数，分页用，not null
     * @param torownum  截止行数，分页用，not null
     * @param iscomplete  0为未完成，1为已完成，空为未完成和已完成
     * @return  QueryAdminData的response，xml
	 */
    public static int getDueTaskDetails(String userdn, String fromdate, String todate, String fromrownum, String torownum, String iscomplete)
    {
    	String querytext = InboxConstants.REQUEST_GET_DUE_TASK_DETAILS;
    	String conditions = InboxUtil.getConditions("", "", "", fromdate, todate, "");
    	String due_conditions;
    	if(iscomplete.equals("") == true){
    		due_conditions = "((STATE IN ('1', '2', '3', '4', '7', '10') AND DUE_DATE &lt; SYS_EXTRACT_UTC(SYSTIMESTAMP)) OR (STATE IN ('5', '8') AND DUE_DATE &lt; COMPLETION_DATE))";
    	}else{
    		if(iscomplete.equals("0") == true){
    			due_conditions = "STATE IN ('1', '2', '3', '4', '7', '10') AND DUE_DATE &lt; SYS_EXTRACT_UTC(SYSTIMESTAMP)";
    		}else{
    			due_conditions = "STATE IN ('5', '8') AND DUE_DATE &lt; COMPLETION_DATE";
    		}
    	}
    	String request = querytext.replace("$USERDN$", userdn).replace("$CONDITIONS$", conditions + "AND " + due_conditions).replace("$FROMROWNUM$", fromrownum).replace("$TOROWNUM$", torownum);
    	return InboxUtil.queryAdminData(request);
    }
}
