package com.laiyifen.common.inbox;
/**
 * For project LaiYifen T-BPM
 * This is a constant class which declares final variables for InboxUtil and InboxHandler
 * 
 * @author Zhang Li Qiang
 *
 */
public class InboxConstants {
	public static final String METHODNAME_QUERYADMINDATA = "QueryAdminData";
	public static final String NAMESPACE_QUERYADMINDATA = "http://schemas.cordys.com/bpm/monitoring/1.0";
	
	public static final String BUSINESS_IDENTIFIER_PROCESSTYPE = "流程类别";
	public static final String BUSINESS_IDENTIFIER_PROCESSCODE = "流程编码";
	
	public static final String SQL_DATE_FORMAT = "YYYY-MM-DD";
	public static final String SQL_INTERSECT = "INTERSECT";
	public static final String SQL_GET_INSTANCE_ID_BY_IDENTIFIER = "SELECT INSTANCE_ID FROM BUSINESS_IDENTIFIER_STRING BIS WHERE BIS.IDENTIFIER_REVISION_ID IN (SELECT REVISION_ID FROM BUSINESS_IDENTIFIER_REVISION WHERE IDENTIFIER_DESCRIPTION = '$IDENTIFIER_DESCRIPTION$') AND BIS.IDENTIFIER_VALUE = '$IDENTIFIER_VALUE$'";
	public static final String SQL_GET_PARTICIPANT_ID_BY_DISTINCT_NAME = "SELECT PARTICIPANT_ID FROM PARTICIPANT WHERE DISTINCT_NAME = '$DISTINCT_NAME$'";
	
	public static final String REQUEST_GET_TASK_COUNT =
		"<dataset>"+
        	"<constructor language=\"DBVIEW\">"+
        		"<parameters>"+
        			"<DISTINCT_NAME dd=\"PARTICIPANT.DISTINCT_NAME\">$USERDN$</DISTINCT_NAME>"+
        		"</parameters>"+
        		"<query>SELECT COUNT(1) AS NUM FROM NOTF_TASK_INSTANCE NTI, PARTICIPANT P WHERE (NTI.TASK_OWNER = P.PARTICIPANT_ID OR NTI.DELEGATED_TO = P.PARTICIPANT_ID) AND NTI.STATE $STATE$ AND P.DISTINCT_NAME = :DISTINCT_NAME $CONDITIONS$</query>"+
        	"</constructor>"+
        "</dataset>";
	public static final String REQUEST_GET_TASK_DETAILS = 
		"<dataset>"+
			"<constructor language=\"DBVIEW\">"+
				"<parameters>"+
					"<DISTINCT_NAME dd=\"PARTICIPANT.DISTINCT_NAME\">$USERDN$</DISTINCT_NAME>"+
				"</parameters>"+
				"<query>SELECT TASK_ID, TASK_OWNER, PRIORITY, SUBJECT, DELIVERY_DATE, SENDER, ACTIVITY_NAME, TRANSLATE(LTRIM(NAMES, '/'), '*/ ', '*;') IDENTIFIER_NAME_LIST, TRANSLATE(LTRIM(VLS, '/'), '*/ ', '*;') IDENTIFIER_VALUE_LIST FROM (SELECT ROW_NUMBER() OVER(PARTITION BY TASK_ID ORDER BY TASK_ID, lvl DESC) RN, TASK_ID, TASK_OWNER, PRIORITY, SUBJECT, DELIVERY_DATE, SENDER, ACTIVITY_NAME, NAMES, VLS FROM (SELECT TASK_ID, TASK_OWNER, PRIORITY, SUBJECT, DELIVERY_DATE, SENDER, ACTIVITY_NAME, LEVEL lvl, SYS_CONNECT_BY_PATH(NAME, '/ ') NAMES, SYS_CONNECT_BY_PATH(VALUE, '/ ') VLS FROM (SELECT TASK_ID, TASK_OWNER, PRIORITY, SUBJECT, DELIVERY_DATE, SENDER, ACTIVITY_NAME, IDENTIFIER_DESCRIPTION AS NAME, IDENTIFIER_VALUE AS VALUE, ROW_NUMBER() OVER(PARTITION BY TASK_ID ORDER BY TASK_ID, IDENTIFIER_DESCRIPTION) X FROM (SELECT * FROM (SELECT NTI.TASK_INSTANCE_ID AS TASK_ID, P1.DISTINCT_NAME AS TASK_OWNER, NTI.PRIORITY AS PRIORITY, NTI.SUBJECT AS SUBJECT, NTI.DELIVERY_DATE AS DELIVERY_DATE, NTI.SOURCE_INSTANCE_ID AS PROCESS_INSTANCE_ID, P.DISPLAY_NAME AS SENDER, PA.ACTIVITY_NAME AS ACTIVITY_NAME FROM NOTF_TASK_INSTANCE NTI, PROCESS_ACTIVITY PA, PARTICIPANT P, PARTICIPANT P1 WHERE NTI.TASK_INSTANCE_ID IN (SELECT TASK_INSTANCE_ID FROM (SELECT ROW_.TASK_INSTANCE_ID, ROWNUM ROWNUM_ FROM (SELECT TASK_INSTANCE_ID FROM NOTF_TASK_INSTANCE NTI_, PARTICIPANT P_ WHERE (NTI_.TASK_OWNER = P_.PARTICIPANT_ID OR NTI_.DELEGATED_TO = P_.PARTICIPANT_ID) AND NTI_.STATE $STATE$ AND P_.DISTINCT_NAME = :DISTINCT_NAME $CONDITIONS$ ORDER BY DELIVERY_DATE DESC) ROW_ WHERE ROWNUM &lt;= $TOROWNUM$) WHERE ROWNUM_ &gt;= $FROMROWNUM$) AND P.PARTICIPANT_ID = NTI.SENDER AND P1.PARTICIPANT_ID = NTI.TASK_OWNER AND PA.INSTANCE_ID = NTI.SOURCE_INSTANCE_ID AND PA.MESSAGE_ID = NTI.PARENT_TASK_ID)LEFT JOIN BUSINESS_IDENTIFIER_STRING BIS ON (BIS.INSTANCE_ID = PROCESS_INSTANCE_ID) LEFT JOIN BUSINESS_IDENTIFIER_REVISION BIR ON (BIR.REVISION_ID = BIS.IDENTIFIER_REVISION_ID AND BIR.IDENTIFIER_ID = BIS.IDENTIFIER_ID))) A CONNECT BY TASK_ID = PRIOR TASK_ID AND X - 1 = PRIOR X)) WHERE RN = 1 ORDER BY DELIVERY_DATE DESC</query>"+
			"</constructor>"+
      "</dataset>";
	public static final String REQUEST_GET_INFO_COUNT = 
		"<dataset>"+
        	"<constructor language=\"DBVIEW\">"+
        		"<parameters>"+
        			"<DISTINCT_NAME dd=\"PARTICIPANT.DISTINCT_NAME\">$USERDN$</DISTINCT_NAME>"+
        		"</parameters>"+
        		"<query>SELECT COUNT(1) AS NUM FROM NOTF_NOTIFICATION NN WHERE NN.RECEIVER = (SELECT PARTICIPANT_ID FROM PARTICIPANT WHERE DISTINCT_NAME = :DISTINCT_NAME) AND NN.MESSAGE_STATE $STATE$ $CONDITIONS$</query>"+
        	"</constructor>"+
        "</dataset>";
	public static final String REQUEST_GET_INFO_DETAILS = 
		"<dataset>"+
        	"<constructor language=\"DBVIEW\">"+
        		"<parameters>"+
        			"<DISTINCT_NAME dd=\"PARTICIPANT.DISTINCT_NAME\">$USERDN$</DISTINCT_NAME>"+
        		"</parameters>"+
        		"<query>SELECT NOTIFICATION_ID, PRIORITY, SUBJECT, DELIVERY_DATE, SENDER, ACTIVITY_NAME, TRANSLATE(LTRIM(NAMES, '/'), '*/ ', '*;') IDENTIFIER_NAME_LIST, TRANSLATE(LTRIM(VLS, '/'), '*/ ', '*;') IDENTIFIER_VALUE_LIST FROM (SELECT ROW_NUMBER() OVER(PARTITION BY NOTIFICATION_ID ORDER BY NOTIFICATION_ID, lvl DESC) RN, NOTIFICATION_ID, PRIORITY, SUBJECT, DELIVERY_DATE, SENDER, ACTIVITY_NAME, NAMES, VLS FROM (SELECT NOTIFICATION_ID, PRIORITY, SUBJECT, DELIVERY_DATE, SENDER, ACTIVITY_NAME, LEVEL lvl, SYS_CONNECT_BY_PATH(NAME, '/ ') NAMES, SYS_CONNECT_BY_PATH(VALUE, '/ ') VLS FROM (SELECT NOTIFICATION_ID, PRIORITY, SUBJECT, DELIVERY_DATE, SENDER, ACTIVITY_NAME, IDENTIFIER_DESCRIPTION AS NAME, IDENTIFIER_VALUE AS VALUE, ROW_NUMBER() OVER(PARTITION BY NOTIFICATION_ID ORDER BY NOTIFICATION_ID, IDENTIFIER_DESCRIPTION) X FROM (SELECT * FROM (SELECT NN.NOTIFICATION_ID AS NOTIFICATION_ID, NN.PRIORITY AS PRIORITY, NN.SUBJECT AS SUBJECT, NN.DELIVERY_DATE AS DELIVERY_DATE, NN.SOURCE_INSTANCE_ID AS PROCESS_INSTANCE_ID, P.DISPLAY_NAME AS SENDER, PA.ACTIVITY_NAME AS ACTIVITY_NAME FROM NOTF_NOTIFICATION NN, PROCESS_ACTIVITY PA, PARTICIPANT P WHERE NN.NOTIFICATION_ID IN (SELECT NOTIFICATION_ID FROM (SELECT ROW_.NOTIFICATION_ID, ROWNUM ROWNUM_ FROM (SELECT NOTIFICATION_ID FROM NOTF_NOTIFICATION WHERE RECEIVER = (SELECT PARTICIPANT_ID FROM PARTICIPANT WHERE DISTINCT_NAME = :DISTINCT_NAME) AND MESSAGE_STATE $STATE$ $CONDITIONS$ ORDER BY DELIVERY_DATE DESC) ROW_ WHERE ROWNUM &lt;= $TOROWNUM$) WHERE ROWNUM_ &gt;= $FROMROWNUM$) AND P.PARTICIPANT_ID = NN.SENDER AND PA.INSTANCE_ID = NN.SOURCE_INSTANCE_ID AND PA.MESSAGE_ID = NN.NOTIFICATION_ID)LEFT JOIN BUSINESS_IDENTIFIER_STRING BIS ON (BIS.INSTANCE_ID = PROCESS_INSTANCE_ID) LEFT JOIN BUSINESS_IDENTIFIER_REVISION BIR ON (BIR.REVISION_ID = BIS.IDENTIFIER_REVISION_ID AND BIR.IDENTIFIER_ID = BIS.IDENTIFIER_ID))) A CONNECT BY NOTIFICATION_ID = PRIOR NOTIFICATION_ID AND X - 1 = PRIOR X)) WHERE RN = 1 ORDER BY DELIVERY_DATE DESC</query>"+
        	"</constructor>"+
        "</dataset>"; 
	public static final String REQUEST_GET_DUE_TASK_COUNT =
		"<dataset>"+
        	"<constructor language=\"DBVIEW\">"+
        		"<parameters>"+
        			"<DISTINCT_NAME dd=\"PARTICIPANT.DISTINCT_NAME\">$USERDN$</DISTINCT_NAME>"+
        		"</parameters>"+
        		"<query>SELECT COUNT(1) AS NUM FROM NOTF_TASK_INSTANCE NTI, PARTICIPANT P WHERE (NTI.TASK_OWNER = P.PARTICIPANT_ID OR NTI.DELEGATED_TO = P.PARTICIPANT_ID) AND P.DISTINCT_NAME = :DISTINCT_NAME $CONDITIONS$</query>"+
        	"</constructor>"+
        "</dataset>";
	public static final String REQUEST_GET_DUE_TASK_DETAILS = 
		"<dataset>"+
			"<constructor language=\"DBVIEW\">"+
				"<parameters>"+
					"<DISTINCT_NAME dd=\"PARTICIPANT.DISTINCT_NAME\">$USERDN$</DISTINCT_NAME>"+
				"</parameters>"+
				"<query>SELECT TASK_ID, TASK_OWNER, PRIORITY, SUBJECT, DELIVERY_DATE, SENDER, ACTIVITY_NAME, TRANSLATE(LTRIM(NAMES, '/'), '*/ ', '*;') IDENTIFIER_NAME_LIST, TRANSLATE(LTRIM(VLS, '/'), '*/ ', '*;') IDENTIFIER_VALUE_LIST FROM (SELECT ROW_NUMBER() OVER(PARTITION BY TASK_ID ORDER BY TASK_ID, lvl DESC) RN, TASK_ID, TASK_OWNER, PRIORITY, SUBJECT, DELIVERY_DATE, SENDER, ACTIVITY_NAME, NAMES, VLS FROM (SELECT TASK_ID, TASK_OWNER, PRIORITY, SUBJECT, DELIVERY_DATE, SENDER, ACTIVITY_NAME, LEVEL lvl, SYS_CONNECT_BY_PATH(NAME, '/ ') NAMES, SYS_CONNECT_BY_PATH(VALUE, '/ ') VLS FROM (SELECT TASK_ID, TASK_OWNER, PRIORITY, SUBJECT, DELIVERY_DATE, SENDER, ACTIVITY_NAME, IDENTIFIER_DESCRIPTION AS NAME, IDENTIFIER_VALUE AS VALUE, ROW_NUMBER() OVER(PARTITION BY TASK_ID ORDER BY TASK_ID, IDENTIFIER_DESCRIPTION) X FROM (SELECT * FROM (SELECT NTI.TASK_INSTANCE_ID AS TASK_ID, P1.DISTINCT_NAME AS TASK_OWNER, NTI.PRIORITY AS PRIORITY, NTI.SUBJECT AS SUBJECT, NTI.DELIVERY_DATE AS DELIVERY_DATE, NTI.SOURCE_INSTANCE_ID AS PROCESS_INSTANCE_ID, P.DISPLAY_NAME AS SENDER, PA.ACTIVITY_NAME AS ACTIVITY_NAME FROM NOTF_TASK_INSTANCE NTI, PROCESS_ACTIVITY PA, PARTICIPANT P, PARTICIPANT P1 WHERE NTI.TASK_INSTANCE_ID IN (SELECT TASK_INSTANCE_ID FROM (SELECT ROW_.TASK_INSTANCE_ID, ROWNUM ROWNUM_ FROM (SELECT TASK_INSTANCE_ID FROM NOTF_TASK_INSTANCE NTI_, PARTICIPANT P_ WHERE (NTI_.TASK_OWNER = P_.PARTICIPANT_ID OR NTI_.DELEGATED_TO = P_.PARTICIPANT_ID) AND P_.DISTINCT_NAME = :DISTINCT_NAME $CONDITIONS$ ORDER BY DELIVERY_DATE DESC) ROW_ WHERE ROWNUM &lt;= $TOROWNUM$) WHERE ROWNUM_ &gt;= $FROMROWNUM$) AND P.PARTICIPANT_ID = NTI.SENDER AND P1.PARTICIPANT_ID = NTI.TASK_OWNER AND PA.INSTANCE_ID = NTI.SOURCE_INSTANCE_ID AND PA.MESSAGE_ID = NTI.PARENT_TASK_ID)LEFT JOIN BUSINESS_IDENTIFIER_STRING BIS ON (BIS.INSTANCE_ID = PROCESS_INSTANCE_ID) LEFT JOIN BUSINESS_IDENTIFIER_REVISION BIR ON (BIR.REVISION_ID = BIS.IDENTIFIER_REVISION_ID AND BIR.IDENTIFIER_ID = BIS.IDENTIFIER_ID))) A CONNECT BY TASK_ID = PRIOR TASK_ID AND X - 1 = PRIOR X)) WHERE RN = 1 ORDER BY DELIVERY_DATE DESC</query>"+
			"</constructor>"+
		"</dataset>";
}