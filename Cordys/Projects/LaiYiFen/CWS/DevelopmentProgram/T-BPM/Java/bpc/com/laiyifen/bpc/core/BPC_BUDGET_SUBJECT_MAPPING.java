/*
  This class has been generated by the Code Generator
*/

package com.laiyifen.bpc.core;

import com.cordys.cpc.bsf.busobject.BusObjectConfig;
import com.cordys.cpc.bsf.busobject.BusObjectIterator;
import com.cordys.cpc.bsf.busobject.QueryObject;


public class BPC_BUDGET_SUBJECT_MAPPING extends BPC_BUDGET_SUBJECT_MAPPINGBase
{
    public BPC_BUDGET_SUBJECT_MAPPING()
    {
        this((BusObjectConfig)null);
    }

    public BPC_BUDGET_SUBJECT_MAPPING(BusObjectConfig config)
    {
        super(config);
    }

    public static BusObjectIterator<com.laiyifen.bpc.core.BPC_BUDGET_SUBJECT_MAPPING> getBpcBudgetObjectsByBusiness(String business_code)
    {
        // TODO implement body
    	 String queryText = "select * from  BPC_BUDGET_SUBJECT_MAPPING where  business_code = :BUSINESS_CODE ";
         QueryObject query = new QueryObject(queryText);
         query.addParameter("BUSINESS_CODE", "BPC_BUDGET_SUBJECT_MAPPING.BUSINESS_CODE", QueryObject.PARAM_STRING,business_code);
         query.setResultClass(BPC_BUDGET_SUBJECT_MAPPING.class);
         return query.getObjects();
    }

    public static BusObjectIterator<com.laiyifen.bpc.core.BPC_BUDGET_SUBJECT_MAPPING> getBpcBudgetSubjectByParam(String year, String business_code, String suject_code_sap, String subject_name_sap,String isproject)
    {
        // TODO implement body
    	StringBuffer queryText = new StringBuffer("select * from BPC_BUDGET_SUBJECT_MAPPING where 1=1 ");
    	if (year !=null && !"".equals(year)){
    		queryText.append(" and year ='" + year +"'");
    	}
    	 if (business_code !=null && !"".equals(business_code)){
     		queryText.append(" and business_code ='"+ business_code +"' ");
     	}
    	 if (suject_code_sap !=null && !"".equals(suject_code_sap)){
     		queryText.append(" and SUBJECT_CODE_SAP LIKE '%" + suject_code_sap + "%'");
     	}
    	 if (subject_name_sap !=null && !"".equals(subject_name_sap)){
     		queryText.append(" and SUBJECT_NAME_SAP LIKE '%"+ subject_name_sap +"%'");
     	}
    	 if(isproject !=null && "1".equals(isproject)){
    		queryText.append(" and subject_type ='专项费用' ");
    	 }else{
    		 queryText.append(" and subject_type !='专项费用' ");
    	 }
    	QueryObject query = new QueryObject(queryText.toString());
    	query.setResultClass(BPC_BUDGET_SUBJECT_MAPPING.class);
		return query.getObjects();
    }

    public static String getBpcBudgetAllSubjectCodeNoProject(){
    	 StringBuffer subjectText = new StringBuffer();
    	 String queryText = "select distinct subject_code_bpc as subject_code_bpc from  BPC_BUDGET_SUBJECT_MAPPING  where subject_type != '专项费用' ";
         QueryObject query = new QueryObject(queryText);
         query.setResultClass(BPC_BUDGET_SUBJECT_MAPPING.class);
         BusObjectIterator<BPC_BUDGET_SUBJECT_MAPPING> iterBpcObjs = query.getObjects();
         if (iterBpcObjs != null) {
 			while (iterBpcObjs.hasMoreElements()) {
 				BPC_BUDGET_SUBJECT_MAPPING iterBpcObj = (BPC_BUDGET_SUBJECT_MAPPING) iterBpcObjs.nextElement();
 				subjectText.append(iterBpcObj.getSUBJECT_CODE_BPC());
 				subjectText.append(",");
 			}
 		}
         return subjectText.toString();
    }
    
    public static String getBpcBudgetAllSubjectCodeProject(){
   	 StringBuffer subjectText = new StringBuffer();
   	 String queryText = "select distinct subject_code_bpc as subject_code_bpc from  BPC_BUDGET_SUBJECT_MAPPING  where subject_type = '专项费用' ";
        QueryObject query = new QueryObject(queryText);
        query.setResultClass(BPC_BUDGET_SUBJECT_MAPPING.class);
        BusObjectIterator<BPC_BUDGET_SUBJECT_MAPPING> iterBpcObjs = query.getObjects();
        if (iterBpcObjs != null) {
			while (iterBpcObjs.hasMoreElements()) {
				BPC_BUDGET_SUBJECT_MAPPING iterBpcObj = (BPC_BUDGET_SUBJECT_MAPPING) iterBpcObjs.nextElement();
				subjectText.append(iterBpcObj.getSUBJECT_CODE_BPC());
				subjectText.append(",");
			}
		}
        return subjectText.toString();
   }
}
