/*
  This class has been generated by the Code Generator
*/

package com.laiyifen.bpc.core;

import java.util.Vector;

import com.cordys.cpc.bsf.busobject.BusObjectConfig;
import com.cordys.cpc.bsf.busobject.BusObjectIterator;
import com.cordys.cpc.bsf.event.AfterCommitObjectEvent;
import com.cordys.cpc.bsf.query.Cursor;
import com.cordys.cpc.bsf.util.ObjectHelper;
import com.laiyifen.bpc.util.BPCUtil;
import com.laiyifen.bpc.util.BpcCommonUtil;
import com.laiyifen.common.core.APPROVAL_HISTORY;
import com.laiyifen.common.core.ATTACHMENT;
import com.laiyifen.common.util.BusObjectHelper;


public class CompositeBPCLoanInfo extends CompositeBPCLoanInfoBase
{
	private BPC_LOAN bpc_loan = null ;
	private BPC_LOAN_ITEM bpc_loan_item = null;
	private Vector<BPC_LOAN_ITEM> bpc_loan_items = new Vector<BPC_LOAN_ITEM>();
	private BPC_AUDIT bpc_audit = null ;
	private APPROVAL_HISTORY approvalHistoryObject = null;
	private Vector<APPROVAL_HISTORY> approvalHistorys = new Vector<APPROVAL_HISTORY>();
	private ATTACHMENT attachment = null;
	private Vector<ATTACHMENT> attachments = new Vector<ATTACHMENT>();
	
    public CompositeBPCLoanInfo()
    {
        this((BusObjectConfig)null);
    }

    public CompositeBPCLoanInfo(BusObjectConfig config)
    {
        super(config);
    }

    public static BusObjectIterator<com.laiyifen.bpc.core.CompositeBPCLoanInfo> getCompositeBPCLoanInfoObjects(com.cordys.cpc.bsf.query.Cursor cursor)
    {
    	 // TODO implement body
        return null;
    }

    public static com.laiyifen.bpc.core.CompositeBPCLoanInfo getCompositeBPCLoanInfoObject(String formID){
    	CompositeBPCLoanInfo compositeBPCLoanInfoobject = new CompositeBPCLoanInfo();
    	//BPC_LOAN
    	BPC_LOAN bpcLoanObject = BPC_LOAN.getBpcLoanObjectByFormID(formID);
    	compositeBPCLoanInfoobject.setBPC_LOANObject(bpcLoanObject);
    	//BPC_AUDIT  
    	BPC_AUDIT bpcAuditObject = BPC_AUDIT.getBpcAuditObjectByFormID(formID);
    	compositeBPCLoanInfoobject.setBPC_AUDITObject(bpcAuditObject);
    	//BPC_LOAN_ITEM
    	BusObjectIterator<BPC_LOAN_ITEM> iterBpcloanitem = BPC_LOAN_ITEM.getBpcLoanItemObjectsByFormID(formID);
    	if (iterBpcloanitem != null) {
			while (iterBpcloanitem.hasMoreElements()) {
				BPC_LOAN_ITEM bpcLoanitem = (BPC_LOAN_ITEM) iterBpcloanitem.nextElement();
				compositeBPCLoanInfoobject.addBPC_LOAN_ITEMObject(bpcLoanitem);
			}
		}
    	
    	//ATTACHMENT
    	BusObjectIterator<ATTACHMENT> attachmentObj = ATTACHMENT.getAttachment(formID);
		if (attachmentObj != null) {
			while (attachmentObj.hasMoreElements()) {
				ATTACHMENT attachmentInfo = (ATTACHMENT) attachmentObj.nextElement();
				compositeBPCLoanInfoobject.addATTACHMENTObject(attachmentInfo);
			}
		}
		//APPROVAL_HISTORY
		BusObjectIterator<APPROVAL_HISTORY> approvalHistoryObj = APPROVAL_HISTORY.getApprovalHistory(formID);
		if (approvalHistoryObj != null) {
			while (approvalHistoryObj.hasMoreElements()) {
				APPROVAL_HISTORY approvalHistoryInfo = (APPROVAL_HISTORY) approvalHistoryObj.nextElement();
				compositeBPCLoanInfoobject.addAPPROVAL_HISTORYObject(approvalHistoryInfo);
			}
		}
    	
		compositeBPCLoanInfoobject.makeTransient();
        return compositeBPCLoanInfoobject;
    }
    public void onInsert()
    {
    	BusObjectHelper.removeEmptyChildren(this);
    	//bpc_loan
    	BPC_LOAN bpcLoanObject = this.getBPC_LOANObject();
    	if (bpcLoanObject != null){
    		BPCUtil bpcUtil = new BPCUtil();
    		String formID = bpcUtil.setFormID(null);
    		
    		bpcLoanObject.setFORM_ID(formID);
    		bpcLoanObject.setRECODE_CODE(BpcCommonUtil.getSeqNumber("BPC_LOAN"));
    		bpc_loan = (BPC_LOAN)ObjectHelper.createObjectForInsert(bpcLoanObject, com.laiyifen.bpc.core.BPC_LOAN.class, false);
    		bpc_loan.insert();
    	}
    	//bpc_loan_item
    	BusObjectIterator<BPC_LOAN_ITEM> bpc_loan_itemObjects = this.getBPC_LOAN_ITEMObjects();
    	if (bpc_loan_itemObjects != null) {
    		while(bpc_loan_itemObjects.hasMoreElements()){
    			BPC_LOAN_ITEM bpc_loan_itemObject = bpc_loan_itemObjects.nextElement();
//    			bpc_loan_itemObject.setFORM_ID(bpcLoanObject.getFORM_ID());
    			bpc_loan_item = (BPC_LOAN_ITEM)ObjectHelper.createObjectForInsert(bpc_loan_itemObject, com.laiyifen.bpc.core.BPC_LOAN_ITEM.class, false) ;
    			bpc_loan_item.insert();
    			bpc_loan_items.add(bpc_loan_item);
    		}
    	}
    	BusObjectHelper.unlinkChildren(this, BPC_LOAN_ITEM.class);
    	
    	//BPC_AUDIT
    	BPC_AUDIT bpcAuditObject = this.getBPC_AUDITObject();
    	if (bpcAuditObject != null){
//    		bpcAuditObject.setFORM_ID(bpcLoanObject.getFORM_ID());
    		bpc_audit = (BPC_AUDIT)ObjectHelper.createObjectForInsert(bpcAuditObject, com.laiyifen.bpc.core.BPC_AUDIT.class, false);
    		bpc_audit.insert();
    	}
    	
    	BusObjectIterator<APPROVAL_HISTORY> approvalHistoryObj = this.getAPPROVAL_HISTORYObjects();
		if (approvalHistoryObj != null) {
			while (approvalHistoryObj.hasMoreElements()) {
				APPROVAL_HISTORY approvalHistoryInfo = (APPROVAL_HISTORY) approvalHistoryObj.nextElement();
				approvalHistoryObject = (APPROVAL_HISTORY) ObjectHelper.createObjectForInsert(
								approvalHistoryInfo,
								com.laiyifen.common.core.APPROVAL_HISTORY.class,
								false);
				approvalHistoryObject.insert();
				approvalHistorys.add(approvalHistoryObject);
			}
		}
		
		BusObjectHelper.unlinkChildren(this, APPROVAL_HISTORY.class);
		
		BusObjectIterator<ATTACHMENT> attachmentObj = this.getATTACHMENTObjects();
		if (attachmentObj != null) {
			while (attachmentObj.hasMoreElements()) {
				ATTACHMENT attachmentInfo = (ATTACHMENT) attachmentObj.nextElement();
				attachment = (ATTACHMENT) ObjectHelper.createObjectForInsert(
						attachmentInfo,
						com.laiyifen.common.core.ATTACHMENT.class, false);
				attachment.insert();
				attachments.add(attachment);
			}
		}
		BusObjectHelper.unlinkChildren(this, ATTACHMENT.class);
    }

    public void onUpdate()
    {
    	BusObjectHelper.removeEmptyChildren(this);
    	//bpc_loan
    	BPC_LOAN bpcLoanObject = this.getBPC_LOANObject();
    	if (bpcLoanObject != null){
    		bpc_loan = (BPC_LOAN)ObjectHelper.createObjectForUpdate(bpcLoanObject, com.laiyifen.bpc.core.BPC_LOAN.class, false);
    		bpc_loan.update();
    	}
    	//bpc_loan_item
    	BusObjectIterator<BPC_LOAN_ITEM> bpc_loan_itemObjects = this.getBPC_LOAN_ITEMObjects();
    	if (bpc_loan_itemObjects != null) {
    		while(bpc_loan_itemObjects.hasMoreElements()){
    			BPC_LOAN_ITEM bpc_loan_itemObject = bpc_loan_itemObjects.nextElement();
    			bpc_loan_item = (BPC_LOAN_ITEM)ObjectHelper.createObjectForUpdate(bpc_loan_itemObject, com.laiyifen.bpc.core.BPC_LOAN_ITEM.class, false) ;
    			bpc_loan_item.update();
    			bpc_loan_items.add(bpc_loan_item);
    		}
    	}
    	BusObjectHelper.unlinkChildren(this, BPC_LOAN_ITEM.class);
    	
    	//BPC_AUDIT
    	BPC_AUDIT bpcAuditObject = this.getBPC_AUDITObject();
    	if (bpcAuditObject != null){
    		bpc_audit = (BPC_AUDIT)ObjectHelper.createObjectForUpdate(bpcAuditObject, com.laiyifen.bpc.core.BPC_AUDIT.class, false);
    		bpc_audit.update();
    	}
    	
		BusObjectIterator<APPROVAL_HISTORY> approvalHistoryObj = this.getAPPROVAL_HISTORYObjects();
		if (approvalHistoryObj != null) {
			while (approvalHistoryObj.hasMoreElements()) {
				APPROVAL_HISTORY approvalHistoryInfo = (APPROVAL_HISTORY) approvalHistoryObj.nextElement();
				approvalHistoryObject = (APPROVAL_HISTORY) ObjectHelper
						.createObjectForUpdate(
								approvalHistoryInfo,
								com.laiyifen.common.core.APPROVAL_HISTORY.class,
								false);
				approvalHistoryObject.update();
				approvalHistorys.add(approvalHistoryObject);
			}
		}
		
		BusObjectHelper.unlinkChildren(this, APPROVAL_HISTORY.class);
		
		BusObjectIterator<ATTACHMENT> attachmentObj = this.getATTACHMENTObjects();
		if (attachmentObj != null) {
			while (attachmentObj.hasMoreElements()) {
				ATTACHMENT attachmentInfo = (ATTACHMENT) attachmentObj.nextElement();
				attachment = (ATTACHMENT) ObjectHelper.createObjectForUpdate(
						attachmentInfo,
						com.laiyifen.common.core.ATTACHMENT.class, false);
				attachment.update();
				attachments.add(attachment);
			}
		}
		
		BusObjectHelper.unlinkChildren(this, ATTACHMENT.class);
    	
    }

    public void onDelete()
    {
    	BusObjectHelper.removeEmptyChildren(this);
    	//bpc_loan
    	BPC_LOAN bpcLoanObject = this.getBPC_LOANObject();
    	if (bpcLoanObject != null){
    		ObjectHelper.createObjectForDelete(bpcLoanObject, com.laiyifen.bpc.core.BPC_LOAN.class, true);
    	}
    	//bpc_loan_item
    	BusObjectIterator<BPC_LOAN_ITEM> bpc_loan_itemObjects = this.getBPC_LOAN_ITEMObjects();
    	if (bpc_loan_itemObjects != null) {
    		while(bpc_loan_itemObjects.hasMoreElements()){
    			BPC_LOAN_ITEM bpc_loan_itemObject = bpc_loan_itemObjects.nextElement();
    			ObjectHelper.createObjectForDelete(bpc_loan_itemObject, com.laiyifen.bpc.core.BPC_LOAN_ITEM.class, true) ;
    		}
    	}
//    	BusObjectHelper.unlinkChildren(this, BPC_LOAN_ITEM.class);
    	
    	//BPC_AUDIT
    	BPC_AUDIT bpcAuditObject = this.getBPC_AUDITObject();
    	if (bpcAuditObject != null){
    		ObjectHelper.createObjectForDelete(bpcAuditObject, com.laiyifen.bpc.core.BPC_AUDIT.class, true);
    	}
    	
    	BusObjectIterator<APPROVAL_HISTORY> approvalHistoryObj = this.getAPPROVAL_HISTORYObjects();
		if (approvalHistoryObj != null) {
			while (approvalHistoryObj.hasMoreElements()) {
				APPROVAL_HISTORY approvalHistoryInfo = (APPROVAL_HISTORY) approvalHistoryObj.nextElement();
				ObjectHelper.createObjectForDelete(approvalHistoryInfo,
						com.laiyifen.common.core.APPROVAL_HISTORY.class, true);
			}
		}
		
		BusObjectIterator<ATTACHMENT> attachmentObj = this.getATTACHMENTObjects();
		if (attachmentObj != null) {
			while (attachmentObj.hasMoreElements()) {
				ATTACHMENT attachmentInfo = (ATTACHMENT) attachmentObj.nextElement();
				ObjectHelper.createObjectForDelete(attachmentInfo,
						com.laiyifen.common.core.ATTACHMENT.class, true);
			}
		}
    }
    
    @Override
	public void onAfterCommit(AfterCommitObjectEvent event) {
		// TODO Auto-generated method stub
    	super.onAfterCommit(event);
    	this.createResponseObject();
		this.clear();
	}

	/**
	 * Create the composite response object.
	 */
	private void createResponseObject() {
		// Persistable objects we can modify, so first make transient.
		this.makeTransient();

		if (bpc_loan != null) {
			this.setBPC_LOANObject(bpc_loan);
		}
		if(bpc_audit!=null){
			this.setBPC_AUDITObject(bpc_audit);
		}

		for (BPC_LOAN_ITEM bpc_loan_item : bpc_loan_items) {
			this.addBPC_LOAN_ITEMObject(bpc_loan_item);
		}
		
		for (APPROVAL_HISTORY approvalHistory : approvalHistorys) { 
			this.addAPPROVAL_HISTORYObject(approvalHistory);
		} 

		for (ATTACHMENT attachment : attachments) {
			this.addATTACHMENTObject(attachment);
		}
	}

	/**
	 * Clears the local variables.
	 */
	private void clear() {
		bpc_loan = null;
		bpc_audit = null;
		bpc_loan_items.clear();
	}

}
