/*
  This class has been generated by the Code Generator
*/

package com.laiyifen.goods.core;

import java.text.SimpleDateFormat;
import java.util.Date;

import com.cordys.cpc.bsf.busobject.BusObjectConfig;
import com.cordys.cpc.bsf.busobject.BusObjectIterator;
import com.cordys.cpc.bsf.busobject.BusObjectManager;
import com.cordys.cpc.bsf.busobject.QueryObject;
import com.cordys.cpc.bsf.event.AccessMode;
import com.cordys.cpc.bsf.event.AttributeAccessEvent;
import com.cordys.cpc.bsf.event.AttributeInitializeEvent;
import com.cordys.cpc.bsf.event.BeforeCommitObjectEvent;
import com.laiyifen.common.core.APPROVAL_HISTORY;
import com.laiyifen.common.core.ATTACHMENT;
import com.laiyifen.common.core.User;
import com.laiyifen.common.util.GUIDUtil;


public class GROUPBUY_ORDER extends GROUPBUY_ORDERBase
{
	private User userObj = null;
    public GROUPBUY_ORDER()
    {
        this((BusObjectConfig)null);
    }

    public GROUPBUY_ORDER(BusObjectConfig config)
    {
        super(config);
    }
    
    public static com.laiyifen.goods.core.GROUPBUY_ORDER getGroupbuyOrderByOrderId(String orderId)
    {
    	StringBuffer queryText = new StringBuffer();
    	QueryObject query = null;
    	queryText.append("SELECT * FROM GROUPBUY_ORDER WHERE ORDER_ID ='").append(orderId).append("'");
    	query = new QueryObject(queryText.toString());
        query.setResultClass(GROUPBUY_ORDER.class);
        return (GROUPBUY_ORDER)query.getObject();
    }
    @SuppressWarnings({ "unchecked", "static-access" })
	@Override
    public void onBeforeCommit(BeforeCommitObjectEvent event) {

    	super.onBeforeCommit(event);
    	
    	BusObjectIterator<GROUPBUY_ORDER_DETAIL> groupbuyorderdetails = this.getObjectManager().getObjects(BusObjectManager.SCOPE_TRANSACTION).getObjectsByType(GROUPBUY_ORDER_DETAIL.class);
    	while(groupbuyorderdetails.hasMoreElements())
    	{
    		GROUPBUY_ORDER_DETAIL groupbuyorderdetail = (GROUPBUY_ORDER_DETAIL)groupbuyorderdetails.nextElement();
    		groupbuyorderdetail.setAttributeValueIntegrity(this, this.ATTR_ORDER_NO, GROUPBUY_ORDER_DETAIL.ATTR_ORDER_NO);
    	}	
    	BusObjectIterator<APPROVAL_HISTORY> approvalHistoryObjects = this.getObjectManager().getObjects(BusObjectManager.SCOPE_TRANSACTION).getObjectsByType(APPROVAL_HISTORY.class);
    	while(approvalHistoryObjects.hasMoreElements())
    	{
    		APPROVAL_HISTORY approvalHistoryObject = (APPROVAL_HISTORY)approvalHistoryObjects.nextElement();
    		approvalHistoryObject.setAttributeValueIntegrity(this, this.ATTR_ORDER_ID, APPROVAL_HISTORY.ATTR_FORM_ID);
    	}	
    	BusObjectIterator<ATTACHMENT> attachmentObjects = this.getObjectManager().getObjects(BusObjectManager.SCOPE_TRANSACTION).getObjectsByType(ATTACHMENT.class);
    	while(attachmentObjects.hasMoreElements())
    	{
    		ATTACHMENT attachmentObject = (ATTACHMENT)attachmentObjects.nextElement();
    		attachmentObject.setAttributeValueIntegrity(this, this.ATTR_ORDER_ID, ATTACHMENT.ATTR_FORM_ID);
    	}
    }
    /*
     * 初始化用户信息
     */
    public void onInitialize_USER_NAME(AttributeInitializeEvent context){
    	context.setInitialValue(this.getCurrUserInfo().getUserName());
    }
   public void onInitialize_DEPARTMENT_NAME(AttributeInitializeEvent context){
    	context.setInitialValue(this.getCurrUserInfo().getDeptName());
    }
    public void onInitialize_DEPARTMENT_CODE(AttributeInitializeEvent context){
    	context.setInitialValue(this.getCurrUserInfo().getDeptCode());
    }
    public void onInitialize_USER_DN(AttributeInitializeEvent context){
    	context.setInitialValue(this.getCurrUserInfo().getUserDN());
    }
    public void onInitialize_USER_CODE(AttributeInitializeEvent context){
    	context.setInitialValue(this.getCurrUserInfo().getUserCode());
    }
    
    public void onInitialize_ORDER_ID(AttributeInitializeEvent context){
    	GUIDUtil _formIDGenerator = new GUIDUtil();
		String formID = _formIDGenerator.getFormID();
    	context.setInitialValue(formID);
    }
    
  //创建时间
    public void onInitialize_APPLICATION_DATE(AttributeInitializeEvent context){
    	SimpleDateFormat sDateFormat = new SimpleDateFormat("yyyy-MM-dd");      
    	String date = sDateFormat.format(new Date());
    	context.setInitialValue(date);
    }
    
  //订购时间
    public void onInitialize_ORDER_DATE(AttributeInitializeEvent context){
    	SimpleDateFormat sDateFormat = new SimpleDateFormat("yyyy-MM-dd");      
    	String date = sDateFormat.format(new Date());
    	context.setInitialValue(date);
    }
    
    /*
     * 控制用户名只可读.
     */
    public void onDisplay_USER_NAME(AttributeAccessEvent context){
    	context.setAccess(AccessMode.READONLY);
    }
    /*
     * 控制用户编码只可读.
     */
    public void onDisplay_USER_CODE(AttributeAccessEvent context){
    	context.setAccess(AccessMode.READONLY);
    }
    /*
     * 控制部门名称只可读.
     */
    public void onDisplay_DEPARTMENT_NAME(AttributeAccessEvent context){
    	context.setAccess(AccessMode.READONLY);
    }
    /*
     * 控制填写时间只可读.
     */
    public void onDisplay_APPLICATION_DATE(AttributeAccessEvent context){
    	context.setAccess(AccessMode.READONLY);
    }
    
    public User getCurrUserInfo(){
    	if( this.userObj==null){        		
    	   this.userObj= com.laiyifen.common.core.User.getUserInfo();   
    	}
    	return this.userObj;
    }
    
  //更新bpcFee ,记录sap返回信息
    //formID，sap凭证号，年度号
    public static boolean updateGroupbuyOrderObjectBySAPReturn(String orderId,String sapOrderNo){
    	GROUPBUY_ORDER groupOrder = getGroupbuyOrderByOrderId(orderId);
    	groupOrder.setSAP_ORDER_NO(sapOrderNo);
		return true;
    }
}
